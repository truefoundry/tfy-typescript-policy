/* eslint-disable */
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type ModelType =
  | "completion"
  | "chat"
  | "embedding"
  | "rerank"
  | "realtime";
export type AWSRegion =
  | "us-east-1"
  | "us-east-2"
  | "us-west-1"
  | "us-west-2"
  | "af-south-1"
  | "ap-east-1"
  | "ap-southeast-3"
  | "ap-south-1"
  | "ap-northeast-3"
  | "ap-northeast-2"
  | "ap-southeast-1"
  | "ap-southeast-2"
  | "ap-northeast-1"
  | "ca-central-1"
  | "eu-central-1"
  | "eu-west-1"
  | "eu-west-2"
  | "eu-south-1"
  | "eu-west-3"
  | "eu-north-1"
  | "me-south-1"
  | "me-central-1"
  | "sa-east-1"
  | "us-gov-east-1"
  | "us-gov-west-1";
export type Agent = BaseArtifactVersion & {} & {
  /**
   * +value=agent
   * +usage=Type of the entity
   */
  type?: "agent";
  /**
   * +sort=100
   * +uiType=TextArea
   * +label=Goal
   * +usage=Short form description. Will be used as `description` when this agent is used as a tool.
   * +uiProps={"descriptionInline":true}
   */
  goal?: string;
  /**
   * `instruction` is the system prompt for now. (2.5 * 1024)
   * +sort=150
   * +uiType=AgentInstructions
   * +uiProps={"helpText":"Use the syntax ${Tool FQN} to reference a tool, and ${AGENT FQN} to reference another agent"}
   * +label=Instructions
   * +usage=Instructions for the agent to follow to achieve the goal
   * +uiProps={"descriptionInline":true}
   */
  instruction?: string;
  /**
   * +sort=200
   * +uiType=Hidden
   * +label=Tools
   * +usage=Tools available to the agent
   * +uiProps={"descriptionInline":true}
   */
  available_tools?: string[];
  /**
   * +sort=300
   * +uiType=EnabledModelSelector
   * +uiProps={"searchable":true,"modelType":"chat","providerType":"openai"}
   * +label=Model
   * +usage=Model to use when running the agent
   */
  model_id?: string;
};
export type AgentOpenAPIToolWithFQN = AgentOpenAPITool & {} & {
  /**
   * +usage=ID of the agent tool
   */
  id?: string;
  /**
   * +usage=FQN of the agent tool
   */
  fqn?: string;
};
export type AgentOpenAPITool = BaseArtifactVersion & {} & {
  /**
   * +value=openapi-tool
   * +usage=Type of the agent
   */
  type?: "openapi-tool";
  /**
   * +sort=20
   * +uiType=OpenapiSchema
   * +label=OpenAPI Spec
   * +usage=OpenAPI Spec for the tool describing the API, endpoints and parameters. [Sample OpenAPI Spec Link](https://assets.production.truefoundry.com/sample-openapi.json)
   * +uiProps={"descriptionInline":true}
   * +placeholder={"openapi":"3.0.0","info":{"title":"LLM Agent Tools API","version":"1.0.0"},"servers":[{"url":"https://api.example.com/v1"}],"paths":{"/weather":{"get":{"summary":"Get current weather","description":"Fetches the current weather for a given location.","parameters":[{"name":"location","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"location":{"type":"string"},"temperature":{"type":"number"},"condition":{"type":"string"}}}}}}}}}}}
   */
  openapi_spec?: BlobStorageReference | {};
  /**
   * +sort=30
   * +label=Base URL
   * +usage=HTTP endpoint where the API is hosted for the tools. E.g. `https://api.example.com/v1`
   * +uiProps={"descriptionInline":true}
   * +placeholder=https://api.example.com/v1
   */
  base_url?: string;
  /**
   * +sort=40
   * +uiType=MethodPathSelector
   * +label=API Route Path
   * +usage=API Route Path for the tool call HTTP request. E.g. `GET /weather`
   * +uiProps={"descriptionInline":true}
   */
  path?: string;
  /**
   * +sort=50
   * +uiType=Hidden
   * +label=API HTTP Method
   * +usage=HTTP Method for the tool call HTTP request
   */
  method?: "get" | "post" | "put" | "delete" | "patch";
  /**
   * +sort=60
   * +uiType=KV
   * +uiProps={"allowSecrets":true,"secretConfig":{"enableNew":true,"hideOptions":true}}
   * +label=Headers
   * +usage=HTTP Headers for the tool call HTTP request. E.g. `Authorization: Bearer <token>`
   * +uiProps={"descriptionInline":true}
   */
  headers?: {
    [k: string]: string;
  };
};
export type AgentWithFQN = Agent & {} & {
  /**
   * +usage=ID of the agent
   */
  id?: string;
  /**
   * +usage=FQN of the agent
   */
  fqn?: string;
};
/**
 * +docs=Describes the configuration for the service
 */
export type Service = BaseService & {} & {
  /**
   * +value=service
   */
  type?: "service";
  /**
   * +label=Replicas
   * +usage=Deploy multiple instances of your pods to distribute incoming traffic across them, ensuring effective load balancing.
   * +icon=fa-clone
   * +sort=4
   */
  replicas?: number | ServiceAutoscaling;
  auto_shutdown?: Autoshutdown;
  /**
   * +label=Allow intercepts
   * +usage=Whether to allow intercepts to be applied for this service.
   * This would inject an additional sidecar in each pod of the service. Not recommended on production
   */
  allow_interception?: boolean;
  /**
   * +label=Rollout strategy
   * +usage=Strategy to dictate how a rollout should happen when a new release for this service is made [Docs](https://docs.truefoundry.com/docs/rollout-strategy)
   */
  rollout_strategy?: Rolling | Canary | BlueGreen;
};
export type ServiceAutoscaling = BaseAutoscaling & {} & {
  /**
   * +label=Autoscaling metrics
   * +usage=Metrics to use for the autoscaler
   * +sort=4
   */
  metrics?: CPUUtilizationMetric | RPSMetric | CronMetric;
};
/**
 * +docs=Describes the configuration for the async-service
 */
export type AsyncService = BaseService & {} & {
  /**
   * +value=async-service
   */
  type?: "async-service";
  /**
   * +label=Replicas
   * +usage=Deploy multiple instances of your pods to distribute incoming traffic across them, ensuring effective load balancing.
   * +icon=fa-clone
   */
  replicas?: number | AsyncServiceAutoscaling;
  rollout_strategy?: Rolling;
  worker_config?: WorkerConfig;
  sidecar?: AsyncProcessorSidecar;
};
export type AsyncServiceAutoscaling = BaseAutoscaling & {} & {
  /**
   * +label=Autoscaling metrics
   * +usage=Metrics to use for the autoscaler
   * +sort=4
   */
  metrics?:
    | SQSQueueMetricConfig
    | NATSMetricConfig
    | KafkaMetricConfig
    | CronMetric
    | AMQPMetricConfig;
};
/**
 * +label=Artifact Version
 * +usage=Log a new Artifact Version containing files and folders with metadata
 */
export type ArtifactVersion = BaseArtifactVersion & {} & {
  /**
   * +label=Type
   * +usage=Artifact Version
   * +value=artifact-version
   */
  type?: "artifact-version";
  /**
   * +label=Artifact Source
   * +uiType=Group
   */
  source?:
    | TrueFoundryManagedSource
    | ExternalBlobStorageSource
    | LocalArtifactSource;
  /**
   * +label=Step
   * +usage=Step/Epoch number in an iterative training loop the artifact version was created. Generally useful when logging a model version from a MLRepo Run
   * +uiProps={"descriptionInline":true}
   */
  step?: number;
  /**
   * +label=Run ID
   * +usage=ID of the MLRepo Run that generated the artifact version
   * +uiType=Hidden
   */
  run_id?: string;
};
export type AwsIntegrations =
  | AwsEcr
  | AwsS3
  | AwsParameterStore
  | AwsSecretsManager
  | AwsEksIntegration
  | BedrockModel;
export type AzureIntegrations =
  | AzureAksIntegration
  | AzureContainerRegistry
  | AzureBlobStorage
  | AzureOpenAIModel
  | AzureVault
  | AzureReposIntegration
  | AzureAIInferenceModel;
/**
 * +docs=Describes the configuration for the code server
 */
export type Codeserver = BaseWorkbenchInput & {} & {
  /**
   * +value=codeserver
   */
  type?: "codeserver";
  image?: WorkbenchImage;
};
export type CustomIntegrations =
  | CustomUsernamePasswordArtifactsRegistry
  | CustomModel
  | EmailNotificationChannel
  | CustomHelmRepo
  | CustomBlobStorage
  | CustomJWTAuthIntegration;
export type GCPRegion =
  | "asia-east1"
  | "asia-east2"
  | "asia-northeast1"
  | "asia-northeast2"
  | "asia-northeast3"
  | "asia-south1"
  | "asia-south2"
  | "asia-southeast1"
  | "asia-southeast2"
  | "australia-southeast1"
  | "australia-southeast2"
  | "europe-central2"
  | "europe-north1"
  | "europe-west1"
  | "europe-west2"
  | "europe-west3"
  | "europe-west4"
  | "europe-west6"
  | "northamerica-northeast1"
  | "northamerica-northeast2"
  | "southamerica-east1"
  | "us-central1"
  | "us-east1"
  | "us-east4"
  | "us-west1"
  | "us-west2"
  | "us-west3"
  | "us-west4";
export type GatewayConfig =
  | RateLimitConfig
  | FallbackConfig
  | LoadBalancingConfig;
export type RateLimitUnit =
  | "requests_per_day"
  | "tokens_per_minute"
  | "requests_per_minute"
  | "tokens_per_day"
  | "requests_per_hour"
  | "tokens_per_hour";
export type GcpIntegrations =
  | GcpGcr
  | GcpGcs
  | GcpGsm
  | GcpGkeIntegration
  | VertexModel
  | GoogleModel;
export type Input =
  | ProviderAccounts
  | Cluster
  | VirtualAccount
  | Workspace
  | ProviderIntegrations
  | Service
  | AsyncService
  | Workflow
  | AgentApp
  | Job
  | SparkJob
  | Helm
  | Volume
  | Notebook
  | Codeserver
  | SSHServer
  | RStudio
  | ApplicationSet
  | Intercept
  | MLRepo
  | ModelVersion
  | ArtifactVersion
  | DataDirectory
  | GatewayConfig
  | Team
  | Environment
  | Policy;
export type ProviderAccounts =
  | AwsProviderAccount
  | AzureProviderAccount
  | GcpProviderAccount
  | DockerhubProviderAccount
  | OpenaiProviderAccount
  | BitbucketProviderAccount
  | CustomProviderAccount
  | GithubProviderAccount
  | GitlabProviderAccount
  | JfrogProviderAccount
  | TTLProviderAccount
  | TrueFoundryProviderAccount
  | QuayProviderAccount
  | CohereProviderAccount
  | AnthropicProviderAccount
  | AnyscaleProviderAccount
  | DeepinfraProviderAccount
  | GroqProviderAccount
  | NomicProviderAccount
  | PalmProviderAccount
  | PerplexityAIProviderAccount
  | MistralAIProviderAccount
  | TogetherAIProviderAccount
  | AI21ProviderAccount
  | OllamaProviderAccount
  | SlackProviderAccount
  | WebhookProviderAccount;
export type TrueFoundryIntegrations = TrueFoundryDBSSM | TrueFoundryPublicModel;
export type ProviderIntegrations =
  | AwsIntegrations
  | GcpIntegrations
  | AzureIntegrations
  | DockerhubIntegrations
  | CustomIntegrations
  | JFrogIntegrations
  | TTLIntegrations
  | TrueFoundryIntegrations
  | QuayIntegrations
  | CohereIntegrations
  | AI21Integrations
  | AnthropicInetgrations
  | AnyScaleIntegrations
  | DeepinfraIntegrations
  | GroqIntegrations
  | MistralIntegrations
  | PerplexityIntegrations
  | TogetherAIIntegrations
  | NomicIntegrations
  | PalmIntegrations
  | OllamaIntegrations
  | OpenAIIntegrations
  | SlackIntegrations
  | WebhookIntegrations;
/**
 * +docs=Describes the configuration for the service
 */
export type Notebook = BaseWorkbenchInput & {} & {
  /**
   * +value=notebook
   */
  type?: "notebook";
  image?: WorkbenchImage;
  /**
   * +label=Stop after (minutes of inactivity)
   * +usage=Stop the notebook instance after this much time in minutes of inactivity.
   * The notebook instance will be stopped even if the notebook is open in your browser, but nothing is running on the notebook.
   * +sort=5
   * +uiProps={"descriptionInline":true}
   */
  cull_timeout?: number;
};
/**
 * +docs=Describes the configuration for the ssh server
 */
export type SSHServer = BaseWorkbenchInput & {} & {
  /**
   * +value=ssh-server
   */
  type?: "ssh-server";
  image?: WorkbenchImage;
  /**
   * +label: SSH Public Key
   * +usage=Add Your SSH Public Key, this will be used to authenticate you to the SSH Server.  \
   * You can find it using `cat ~/.ssh/id_rsa.pub` in Mac/Linux or `type $home\.ssh\id_rsa.pub` in Windows Powershell.  \
   * You can also generate a new SSH key pair using `ssh-keygen -t rsa` in your local terminal. (same for both Mac/Linux and Windows Powershell)
   * +uiType=TextArea
   * +sort=4
   */
  ssh_public_key?: string;
  /**
   * +label=Stop after (minutes of inactivity)
   * +usage=Stop the SSH Server instance after this much time in minutes of inactivity. The instance is considered active if there is at least one active SSH connection (a client connected to the SSH server), or if a background job is running using tmux or screen, or if the pod has restarted.
   * +sort=5
   * +uiProps={"descriptionInline":true, "warningMessage":"Please note that stop after inactivity is only available for images with tag(including custom images) >= v0.3.10"}
   */
  cull_timeout?: number;
};
/**
 * +docs=Describes the configuration for the Rstudio server
 */
export type RStudio = BaseWorkbenchInput & {} & {
  /**
   * +value=rstudio
   */
  type?: "rstudio";
  image?: WorkbenchImage;
};
/**
 * +label=Artifact Version
 * +usage=Log a new Model Version containing model files and folders with metadata
 */
export type ModelVersion = BaseArtifactVersion & {} & {
  /**
   * +label=Type
   * +usage=Model Version
   * +value=model-version
   */
  type?: "model-version";
  /**
   * +label=Model Source
   * +uiType=Group
   */
  source?:
    | TrueFoundryManagedSource
    | ExternalBlobStorageSource
    | LocalModelSource;
  /**
   * +label=Framework
   * +usage=Framework for the model version like Transformers, PyTorch, Sklearn, Xgboost etc with framework specific metadata. This will be used to infer model deployment configuration
   * +uiProps={"descriptionInline":true}
   */
  framework?:
    | TransformersFramework
    | TensorFlowFramework
    | SklearnFramework
    | PyTorchFramework
    | KerasFramework
    | XGBoostFramework
    | LightGBMFramework
    | FastAIFramework
    | H2OFramework
    | ONNXFramework
    | SpaCyFramework
    | StatsModelsFramework
    | GluonFramework
    | PaddleFramework;
  environment?: ModelVersionEnvironment;
  /**
   * +label=Step
   * +usage=Step/Epoch number in an iterative training loop the model version was created. Generally useful when logging a model version from a MLRepo Run
   * +uiProps={"descriptionInline":true}
   */
  step?: number;
  /**
   * +label=Run ID
   * +usage=ID of the MLRepo Run that generated the model version
   * +uiType=Hidden
   */
  run_id?: string;
};
/**
 * +label=Scikit Learn Serialization Format
 * +usage=Serialization format used to save the sklearn model
 */
export type SklearnSerializationFormat = "cloudpickle" | "joblib" | "pickle";
/**
 * +label=Serialization format
 * +usage=Serialization format used to save the xgboost model
 */
export type XGBoostSerializationFormat =
  | "cloudpickle"
  | "joblib"
  | "pickle"
  | "json";
export type PolicyEntityTypes =
  | "service"
  | "job"
  | "notebook"
  | "ssh-server"
  | "workflow";
export type PolicyActions = "apply";

/**
 * +label=A21 Model
 */
export interface AI21Integrations {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/ai21
   */
  type: "integration/model/ai21";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=TwentyOneAI API Key Auth
 */
export interface AI21KeyAuth {
  /**
   * +value=api-key
   */
  type: "api-key";
  /**
   * +sort=100
   * +uiType=Password
   */
  api_key: string;
}
/**
 * +label=A21 Model
 */
export interface AI21Model {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/ai21
   */
  type: "integration/model/ai21";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=AI21
 * +icon=ai21
 */
export interface AI21ProviderAccount {
  /**
   * +value=provider-account/ai21
   */
  type: "provider-account/ai21";
  /**
   * +uiProps={"disableEdit":true}
   * +label=Name
   */
  name: string;
  auth_data: AI21KeyAuth;
  /**
   * +uiType=IntegrationsGroup
   */
  integrations?: AI21Integrations[];
}
/**
 * +docs=Describes the configuration for the input AMQP worker
 * +label=AMQP
 */
export interface AMQPInputConfig {
  /**
   * +value=amqp
   */
  type: "amqp";
  /**
   * +label=Queue URL
   * +usage=AMQP Queue URL of Subscriber
   * +sort=1
   */
  url: string;
  /**
   * +label=Queue Name
   * +usage=AMQP Queue Name
   * +sort=2
   */
  queue_name: string;
  /**
   * +label=Wait Time Seconds
   * +usage=Wait timeout for long polling.
   */
  wait_time_seconds: number;
}
export interface AMQPMetricConfig {
  /**
   * +value=amqp
   */
  type: "amqp";
  /**
   * +label=Queue Length
   * +usage=Upper limit of the number of backlog messages the auto-scaler will try to maintain per replica. If you set this number to 10 and have 30 messages in the stream and one replica, the auto-scaler will scale the number of replicas to 3.
   */
  queue_length: number;
}
/**
 * +docs=Describes the configuration for the output AMQP worker
 * +label=AMQP
 */
export interface AMQPOutputConfig {
  /**
   * +value=amqp
   */
  type: "amqp";
  /**
   * +label=Queue URL
   * +usage=AMQP Queue URL of Publisher
   * +sort=1
   */
  url: string;
  /**
   * +label=Routing Key
   * +usage=AMQP Routing Key to publish to.
   * +sort=2
   */
  routing_key: string;
  /**
   * +label=Exchange Name
   * +usage=AMQP Exchange Name
   * +sort=3
   */
  exchange_name?: string;
}
export interface AWSAccessKeyAuth {
  /**
   * +label=AWS Access Key ID
   * +usage=AWS Access Key ID
   * +sort=1
   */
  aws_access_key_id: string;
  /**
   * +label=AWS Secret Access Key
   * +usage=AWS Secret Access Key for the user to authenticate with
   * +sort=2
   */
  aws_secret_access_key: string;
  /**
   * +label=AWS Session Token
   * +usage=AWS Session Token, only required when using temporary credentials
   * +sort=3
   */
  aws_session_token?: string;
}
export interface AWSInferentia {
  /**
   * +value=aws_inferentia
   */
  type: "aws_inferentia";
  /**
   * +label=Inferentia accelerator name
   * +usage=Name of the AWS Inferentia Accccelerator. One of [INF1, INF2].
   * This field is required for Node Selector and can be ignored in Nodepool Selector.
   */
  name?: string;
  /**
   * +label=Count
   * +usage=Count of Inferentia accelerator chips to provide to the application
   */
  count: number;
}
export interface BaseArtifactVersion {
  /**
   * +sort=1
   * +label=Name
   * +message=The name should start with lowercase alphabets  and can contain alphanumeric and can include '-' in between
   * +usage=Name of the entity
   */
  name?: string;
  /**
   * +sort=2
   * +label=Description
   */
  description?: string | null;
  /**
   * +sort=50000
   * +label=Metadata
   * +usage=Key value metadata. Should be valid JSON. For e.g. `{"business-unit": "sales", "quality": "good", "rating": 4.5}`
   * +uiType=JsonInput
   * +uiProps={"descriptionInline":true}
   */
  metadata: {};
  /**
   * +sort=51000
   * +label=Version Alias
   * +usage=Version alias is alternate, ideally human readable, version string to reference an artifact version. It should start with `v` followed by alphanumeric and it can include `.` and `-` in between (e.g. `v1.0.0`, `v1-prod`, `v3-dev`, etc)
   * +message=The version alias should start with `v` followed by alphanumeric and can include `.` and `-` in between (e.g. `v1.0.0`, `v1-prod`, `v3-dev`, etc)
   * +uiProps={"descriptionInline":true}
   * +placeholder=v1.0.0
   */
  version_alias?: string;
  /**
   * +label=ML Repo
   * +usage=Name of the ML Repo
   * +uiType=Hidden
   */
  ml_repo?: string;
  /**
   * +label=Version of the entity
   * +usage=Version of the entity
   * +uiType=Hidden
   */
  version?: number;
}
export interface AgentApp {
  /**
   * +value=agent-app
   * +usage=Type of the app
   */
  type: "agent-app";
  /**
   * +label=Tools
   * +usage=Tools available to the Agent app
   */
  tools: AgentOpenAPIToolWithFQN[];
  /**
   * +label=Agents
   * +usage=Agents available to the Agent app
   */
  agents: AgentWithFQN[];
  /**
   * +label=Root Agent
   * +usage=Root Agent for the app. This will be the first agent invoked
   */
  root_agent: string;
}
/**
 * +label=Blob Storage Reference
 * +usage=A reference to content offloaded to blob storage
 * +docs=Defines the structure for blob storage content references, including type, path, and mime_type
 */
export interface BlobStorageReference {
  /**
   * +value=blob-storage
   */
  type: "blob-storage";
  /**
   * +label=Path
   * +usage=Path to the content in blob storage
   */
  path: string;
  /**
   * +label=MIME Type
   * +usage=MIME type of the content
   */
  mime_type:
    | "text/plain"
    | "application/json"
    | "image/png"
    | "image/jpeg"
    | "application/x-directory";
}
/**
 * +label=Anthropic Model
 */
export interface AnthropicInetgrations {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/anthropic
   */
  type: "integration/model/anthropic";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Anthropic API Key Auth
 */
export interface AnthropicKeyAuth {
  /**
   * +value=api-key
   */
  type: "api-key";
  /**
   * +sort=100
   * +uiType=Password
   */
  api_key: string;
}
/**
 * +label=Anthropic Model
 */
export interface AnthropicModel {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/anthropic
   */
  type: "integration/model/anthropic";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Anthropic
 * +icon=anthropic
 */
export interface AnthropicProviderAccount {
  /**
   * +value=provider-account/anthropic
   */
  type: "provider-account/anthropic";
  /**
   * +uiProps={"disableEdit":true}
   * +label=Name
   */
  name: string;
  auth_data: AnthropicKeyAuth;
  /**
   * +uiType=IntegrationsGroup
   */
  integrations?: AnthropicInetgrations[];
}
/**
 * +label=Anyscale Model
 */
export interface AnyScaleIntegrations {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/anyscale
   */
  type: "integration/model/anyscale";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Anyscale API Key Auth
 */
export interface AnyscaleKeyAuth {
  /**
   * +value=api-key
   */
  type: "api-key";
  /**
   * +sort=100
   * +uiType=Password
   */
  api_key: string;
}
/**
 * +label=Anyscale Model
 */
export interface AnyscaleModel {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/anyscale
   */
  type: "integration/model/anyscale";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Anyscale
 * +icon=anyscale
 */
export interface AnyscaleProviderAccount {
  /**
   * +value=provider-account/anyscale
   */
  type: "provider-account/anyscale";
  /**
   * +uiProps={"disableEdit":true}
   * +label=Name
   */
  name: string;
  auth_data: AnyscaleKeyAuth;
  /**
   * +uiType=IntegrationsGroup
   */
  integrations?: AnyScaleIntegrations[];
}
/**
 * +docs=Describes the configuration for the application set
 */
export interface ApplicationSet {
  /**
   * +value=application-set
   */
  type: "application-set";
  /**
   * +label=Name
   * +usage=Name of the application set.
   * +icon=fa-font
   */
  name: string;
  /**
   * +label=Components
   * +usage=Array of components with their specifications.
   * +icon=fa-puzzle-piece
   * +uiType=AppComponents
   */
  components?: (Service | AsyncService | Job | Helm)[];
  /**
   * +label=Template
   * +usage=Template to be used for the application set.
   * +icon=fa-file
   * +uiType=Hidden
   */
  template?: string;
  /**
   * +label=Values
   * +usage=Values to be used to render components for the application set.
   * +icon=fa-file
   * +uiType=YamlInput
   * +uiProps={"allowAllValues":true}
   */
  values?: {};
  /**
   * +label=Workspace FQN
   * +docs=Fully qualified name of the workspace
   * +uiType=Hidden
   */
  workspace_fqn?: string;
  /**
   * +label=Convert Template Manifest
   * +docs=Flag to indicate if the template manifest should be converted to TrueFoundry manifest
   * +uiType=Hidden
   */
  convert_template_manifest?: boolean;
}
export interface BaseService {
  /**
   * +usage=Name of the service. This uniquely identifies this service in the workspace.
   * > Name can only contain alphanumeric characters and '-' and can be atmost 25 characters long
   * +sort=1
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +docs=Specify whether you want to deploy a Docker image or build and deploy from source code
   * +label=Deploy a Docker image or build and deploy from source code
   * +icon=fa-solid fa-cloud-arrow-up:#21B6A8
   * +sort=2
   */
  image: Build | Image;
  artifacts_download?: ArtifactsDownload;
  resources?: Resources;
  /**
   * +label=Environment Variables
   * +usage=Configure environment variables to be injected in the service either as plain text or secrets. [Docs](https://docs.truefoundry.com/docs/env-variables)
   * +icon=fa-globe
   * +sort=6
   */
  env?: {
    [k: string]: string;
  } | null;
  /**
   * +docs=Specify the ports you want the service to be exposed to
   * +label=Configure ports and endpoints to route customer traffic
   * +usage=Expose the deployment to make it accessible over the internet or keep it private. Implement authentication to restrict access. [Docs](https://docs.truefoundry.com/docs/define-ports-and-domains)
   * +icon=fa-plug
   * +sort=4
   */
  ports: Port[];
  service_account?: string;
  /**
   * +usage=Configure data to be mounted to service pod(s) as a string, secret or volume. [Docs](https://docs.truefoundry.com/docs/mounting-volumes-service)
   * +sort=10011
   */
  mounts?: (SecretMount | StringDataMount | VolumeMount)[];
  /**
   * +label=Labels
   */
  labels?: {
    [k: string]: string;
  };
  kustomize?: Kustomize;
  liveness_probe?: HealthProbe;
  readiness_probe?: HealthProbe;
  /**
   * +label=Workspace FQN
   * +docs=Fully qualified name of the workspace
   * +uiType=Hidden
   */
  workspace_fqn?: string;
}
/**
 * +docs=Describes how we build our code into a Docker image.
 * +label=Source Code (Build and deploy source code)
 * +icon=fa-code
 */
export interface Build {
  /**
   * +value=build
   */
  type: "build";
  /**
   * +docs=FQN of the container registry. You can the FQN of your desired container registry (or add one)
   * in the  Integrations page[Integrations](https://app.truefoundry.tech/integrations?tab=docker-registry) page
   * +label=Docker Registry
   * +usage=FQN of the container registry. If you can't find your registry here,
   * add it through the [Integrations](/integrations?tab=docker-registry) page
   */
  docker_registry?: string;
  /**
   * +docs=Source code location.
   * +label=Fetch source code to build and deploy
   * +icon=fa-code
   * +sort=1
   */
  build_source: RemoteSource | GitSource | LocalSource;
  /**
   * +docs=Instructions to build a container image out of the build source
   * +label=Build using DockerFile or using Buildpack
   * +icon=fa-wrench
   * +sort=2
   */
  build_spec: DockerFileBuild | PythonBuild;
}
/**
 * +docs=Describes that we are using code stored in a remote respository to build our image
 * +label=S3
 * +icon=fa-brands fa-aws:black
 * +sort=200
 */
export interface RemoteSource {
  /**
   * +value=remote
   */
  type: "remote";
  /**
   * +docs=Remote repository URI
   * +label=Remote URI
   */
  remote_uri: string;
}
/**
 * +docs=Describes that we are using code stored in a git repository to build our image
 * +label=Git Source
 * +icon=fa-solid fa-code-branch:black
 * +sort=300
 */
export interface GitSource {
  /**
   * +value=git
   */
  type: "git";
  /**
   * +label=Repo URL
   * +usage=The repository URL.
   * +sort=1
   * +message=Needs to be a valid Github, Bitbucket, Azure Repos or Gitlab link
   */
  repo_url: string;
  /**
   * +label=Commit SHA
   * +usage=The commit SHA.
   * +sort=2
   */
  ref: string;
  /**
   * +label=Branch Name
   * +usage=Selecting branch will select latest commit SHA of the branch.
   * +sort=3
   */
  branch_name?: string;
}
/**
 * +docs=Describes that we are using code stored in a local developement environment to build our image
 * +label=Local
 * +icon=fa-folder:black
 * +sort=100
 */
export interface LocalSource {
  /**
   * +value=local
   */
  type: "local";
  /**
   * +usage=Local project root path.
   */
  project_root_path: string;
  /**
   * run docker build locally
   */
  local_build: boolean;
}
/**
 * +docs=Describes that we are using a dockerfile to build our image
 * +label=Docker File (I already have Docker File)
 * +icon=fa-brands fa-docker:#0db7ed
 */
export interface DockerFileBuild {
  /**
   * +value=dockerfile
   */
  type: "dockerfile";
  /**
   * +label=Path to Dockerfile
   * +usage=The file path of the Dockerfile relative to project root path.
   */
  dockerfile_path: string;
  /**
   * +label=Path to build context
   * +usage=Build context path for the Dockerfile relative to project root path.
   */
  build_context_path: string;
  /**
   * +label=Command Override
   * +usage=Override the command to run when the container starts
   * When deploying a Job, the command can be templatized by defining `params` and referencing them in command
   * E.g. `python main.py --learning_rate {{learning_rate}}`
   */
  command?: string | string[];
  /**
   * +label=Build arguments to pass to docker build
   */
  build_args?: {
    [k: string]: string;
  };
}
/**
 * +docs=Describes that we are using python to build a container image with a specific python version and pip packages installed.
 * +label=Python Code (I don't have Dockerfile)
 * +icon=fa-brands fa-python:#306998
 */
export interface PythonBuild {
  /**
   * +value=tfy-python-buildpack
   */
  type: "tfy-python-buildpack";
  /**
   * +label=Python version
   * +usage=Python version to run your application. Should be one of the tags listed on [Official Python Docker Page](https://hub.docker.com/_/python)
   * +message=Please enter a valid Python version tag
   */
  python_version: string;
  /**
   * +label=Path to build context
   * +usage=Build path relative to project root path.
   */
  build_context_path: string;
  /**
   * `Path to build context`
   * +label=Path to requirements
   * +usage=Path to `requirements.txt` relative to
   * `Path to build context`
   */
  requirements_path?: string;
  /**
   * +label=Pip packages to install
   * +usage=Define pip package requirements.
   * In Python/YAML E.g. ["fastapi>=0.90,<1.0", "uvicorn"]
   * +placeholder=Enter a pip package name E.g. fastapi>=0.90,<1.0
   */
  pip_packages?: string[];
  /**
   * +label=List of Debian packages to install.
   * +usage=Debian packages to install via `apt get`.
   * In Python/YAML E.g. ["git", "ffmpeg", "htop"]
   * +placeholder=Enter a debian package name E.g. ffmpeg
   */
  apt_packages?: string[];
  /**
   * Command will be set as the Entrypoint of the generated
   * image.
   * +label=Command
   * +usage=Command to run when the container starts.
   * Command will be set as the Entrypoint of the generated image.
   * When deploying a Job, the command can be templatized by defining `params` and referencing them in command
   * E.g. `python main.py --learning_rate {{learning_rate}}`
   */
  command: string | string[];
  /**
   * +label=CUDA Version
   * +usage=Version of CUDA Toolkit and CUDNN to install in the image
   * These combinations are based off of publically available docker images on docker hub
   * You can also specify a valid tag of the form {cuda_version_number}-cudnn{cudnn_version_number}-{runtime|devel}-ubuntu{ubuntu_version}
   * Refer https://hub.docker.com/r/nvidia/cuda/tags for valid set of values
   * Note: We use deadsnakes ubuntu ppa to add Python that currently supports only Ubuntu 18.04, 20.04 and 22.04
   */
  cuda_version?: string;
}
/**
 * +docs=Describes that we are using a pre-built image stored in a Docker Image registry
 * +label=Docker Image (Deploy an existing image)
 * +icon=fa-brands fa-docker:#0db7ed
 */
export interface Image {
  /**
   * +value=image
   */
  type: "image";
  /**
   * +label=Image URI
   * +usage=The image URI. Specify the name of the image and the tag.
   * If the image is in Dockerhub, you can skip registry-url (for e.g. `tensorflow/tensorflow`).
   * You can use an image from a private registry using Advanced fields
   * +placeholder=registry-url/account/image:version (e.g. docker.io/tensorflow/tensorflow)
   */
  image_uri: string;
  /**
   * +docs=FQN of the container registry. You can the FQN of your desired container registry (or add one)
   * in the  Integrations page[Integrations](https://app.truefoundry.tech/integrations?tab=docker-registry) page
   * +label=Docker Registry
   * +usage=FQN of the container registry. If you can't find your registry here,
   * add it through the [Integrations](/integrations?tab=docker-registry) page
   */
  docker_registry?: string;
  /**
   * +label=Command Override
   * +usage=Override the command to run when container starts.
   * When deploying a Job, the command can be templatized by defining `params` and referencing them in command
   * E.g. `python main.py --learning_rate {{learning_rate}}`
   */
  command?: string | string[];
}
/**
 * +docs=Describes the configuration for the artifacts cache
 * +label=Artifacts Download
 * +usage=Download and cache models in a volume to enhance loading speeds and reduce costs by avoiding repeated downloads. [Docs](https://docs.truefoundry.com/docs/download-and-cache-models)
 */
export interface ArtifactsDownload {
  cache_volume?: ArtifactsCacheVolume;
  /**
   * +label=Artifacts
   * +usage=List of artifacts to be cached
   */
  artifacts: (TrueFoundryArtifactSource | HuggingfaceArtifactSource)[];
}
/**
 * +docs=Describes the volume that will be used to cache the models
 * +label=Artifacts Cache Volume
 */
export interface ArtifactsCacheVolume {
  /**
   * +label=Storage Class
   * +usage=Storage class of the Volume where artifacts will be cached
   */
  storage_class: string;
  /**
   * +label=Cache Size (GB)
   * +usage=Size of the Volume (in GB) where artifacts will be cached. Should be greater than twice the size of artifacts getting cached
   */
  cache_size: number;
}
/**
 * +docs=Input for Artifact from TrueFoundry Artifact Registry
 * +label=TrueFoundry Artifact Source
 */
export interface TrueFoundryArtifactSource {
  /**
   * +value=truefoundry-artifact
   */
  type: "truefoundry-artifact";
  /**
   * +label=Artifact or Model Version FQN
   * +usage=Artifact or Model Version FQN of the artifact to be downloaded
   */
  artifact_version_fqn: string;
  /**
   * +label=Download Path Environment Variable
   * +usage=Environment variable which will contain the download path of the artifact
   */
  download_path_env_variable: string;
}
/**
 * +docs=Input for Artifact from Huggingface Model Hub
 * +label=Huggingface Model Source
 */
export interface HuggingfaceArtifactSource {
  /**
   * +value=huggingface-hub
   */
  type: "huggingface-hub";
  /**
   * +label=Model ID
   * +usage=Model ID of the artifact to be downloaded
   */
  model_id: string;
  /**
   * +label=Revision
   * +usage=Revision of the artifact to be downloaded
   */
  revision: string;
  /**
   * +label=Ignore Patterns
   * +usage=List of patterns to ignore while downloading the artifact
   */
  ignore_patterns: string[];
  /**
   * +label=Download Path Environment Variable
   * +usage=Environment variable which will contain the download path of the artifact
   */
  download_path_env_variable: string;
}
/**
 * +docs=Describes the resource constraints for the application so that it can be deployed accordingly on the cluster
 * To learn more you can go [here](https://docs.truefoundry.com/docs/resources)
 * +icon=fa-microchip
 * +label=Resources
 * +usage=Configure resource allocations, specify node constraints and capacity types to improve performance and reduce expenses. [Docs](https://docs.truefoundry.com/docs/resources)
 */
export interface Resources {
  /**
   * +label=CPU Request
   * +sort=1
   * +usage=Requested CPU which determines the minimum cost incurred. The CPU usage can exceed the requested
   * amount, but not the value specified in the limit. 1 CPU means 1 CPU core. Fractional CPU can be requested
   * like `0.5` or `0.05`
   */
  cpu_request: number;
  /**
   * +label=CPU Limit
   * +usage=CPU limit beyond which the usage cannot be exceeded. 1 CPU means 1 CPU core. Fractional CPU can be requested
   * like `0.5`. CPU limit should be >= cpu request.
   * +sort=2
   */
  cpu_limit: number;
  /**
   * +label=Memory Request
   * +usage=Requested memory which determines the minimum cost incurred. The unit of memory is in megabytes(MB).
   * So 1 means 1 MB and 2000 means 2GB.
   * +sort=3
   */
  memory_request: number;
  /**
   * +label=Memory Limit
   * +usage=Memory limit after which the application will be killed with an OOM error. The unit of memory is
   * in megabytes(MB). So 1 means 1 MB and 2000 means 2GB. MemoryLimit should be greater than memory request.
   * +sort=4
   */
  memory_limit: number;
  /**
   * +label=Storage Request
   * +usage=Requested disk storage. The unit of memory is in megabytes(MB).
   * This is ephemeral storage and will be wiped out on pod restarts or eviction
   * +sort=5
   */
  ephemeral_storage_request: number;
  /**
   * +label=Storage Limit
   * +usage=Disk storage limit. The unit of memory is in megabytes(MB). Exceeding this limit will result in eviction.
   * It should be greater than the request. This is ephemeral storage and will be wiped out on pod restarts or eviction
   * +sort=6
   */
  ephemeral_storage_limit: number;
  /**
   * +label=GPU Count
   * +usage=Count of GPUs to provide to the application
   * Note the exact count and max count available for a given GPU type depends on cloud provider and cluster type.
   */
  gpu_count?: number;
  /**
   * +label=Shared Memory Size (MB)
   * +usage=Define the shared memory requirements for your workload. Machine learning libraries like Pytorch can use Shared Memory
   * for inter-process communication. If you use this, we will mount a `tmpfs` backed volume at the `/dev/shm` directory.
   * Any usage will also count against the workload's memory limit (`resources.memory_limit`) along with your workload's memory usage.
   * If the overall usage goes above `resources.memory_limit` the user process may get killed.
   * Shared Memory Size cannot be more than the defined Memory Limit for the workload.
   */
  shared_memory_size?: number;
  /**
   * +label=Node
   * +usage=This field determines how the underlying node resource is to be utilized
   */
  node?: NodeSelector | NodepoolSelector;
  /**
   * +label=Devices
   * +usage=Define custom device or accelerator requirements for your workload. We currently support NVIDIA GPUs, AWS Inferentia Accelerators, Single Host TPU Slices.
   */
  devices?: (
    | NvidiaGPU
    | AWSInferentia
    | NvidiaMIGGPU
    | NvidiaTimeslicingGPU
    | GcpTPU
  )[];
}
/**
 * +label=Node selector
 * +usage=Constraints to select a Node - Specific GPU / Instance Families, On-Demand/Spot.
 */
export interface NodeSelector {
  /**
   * +value=node_selector
   */
  type: "node_selector";
  /**
   * +label=GPU Type
   * +usage=Name of the Nvidia GPU. One of [P4, P100, V100, T4, A10G, A100_40GB, A100_80GB]
   * One instance of the card contains the following amount of memory -
   * P4: 8 GB, P100: 16 GB, V100: 16 GB, T4: 16 GB, A10G: 24 GB, A100_40GB: 40GB, A100_80GB: 80 GB
   */
  gpu_type?: string;
  /**
   * +label=Instance family
   * +usage=Instance family of the underlying machine to use. Multiple instance families can be supplied.
   * The workload is guaranteed to be scheduled on one of them.
   */
  instance_families?: string[];
  /**
   * +label=Capacity Type
   * +usage=Configure what type of nodes to run the app. By default no placement logic is applied.
   * "spot_fallback_on_demand" will try to place the application on spot nodes but will fallback to on-demand when spot nodes are not available.
   * "spot" will strictly place the application on spot nodes.
   * "on_demand" will strictly place the application on on-demand nodes.
   */
  capacity_type?: "spot_fallback_on_demand" | "spot" | "on_demand";
}
/**
 * +label=Nodepool selector
 * +usage=Specify one or more nodepools to run your application on.
 */
export interface NodepoolSelector {
  /**
   * +value=nodepool_selector
   */
  type: "nodepool_selector";
  /**
   * +label=Nodepools
   * +usage=Nodepools where you want to run your workload. Multiple nodepools can be selected.
   *  The workload is guaranteed to be scheduled on one of the nodepool
   */
  nodepools?: string[];
}
export interface NvidiaGPU {
  /**
   * +value=nvidia_gpu
   */
  type: "nvidia_gpu";
  /**
   * +label=GPU Name
   * +usage=Name of the Nvidia GPU. One of [P4, P100, V100, T4, A10G, A100_40GB, A100_80GB]
   * This field is required for Node Selector and can be ignored in Nodepool Selector.
   * One instance of the card contains the following amount of memory -
   * P4: 8 GB, P100: 16 GB, V100: 16 GB, T4: 16 GB, A10G: 24 GB, A100_40GB: 40GB, A100_80GB: 80 GB
   */
  name?: string;
  /**
   * +label=GPU Count
   * +usage=Count of GPUs to provide to the application
   * Note the exact count and max count available for a given GPU type depends on cloud provider and cluster type.
   */
  count: number;
}
export interface NvidiaMIGGPU {
  /**
   * +value=nvidia_mig_gpu
   */
  type: "nvidia_mig_gpu";
  /**
   * +label=GPU Name
   * +usage=Name of the Nvidia GPU. One of [P4, P100, V100, T4, A10G, A100_40GB, A100_80GB]
   * This field is required for Node Selector and can be ignored in Nodepool Selector.
   * One instance of the card contains the following amount of memory -
   * P4: 8 GB, P100: 16 GB, V100: 16 GB, T4: 16 GB, A10G: 24 GB, A100_40GB: 40GB, A100_80GB: 80 GB
   */
  name?: string;
  /**
   * +label=MIG Profile
   * +usage=Name of the MIG profile to use. One of the following based on gpu type
   * Please refer to https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#supported-mig-profiles for more details
   * A100 40 GB - [1g.5gb, 1g.10gb, 2g.10gb, 3g.20gb, 4g.20gb]
   * A100 80 GB / H100 80 GB - [1g.10gb, 1g.20gb, 2g.20gb, 3g.40gb, 4g.40gb]
   * H100 94 GB - [1g.12gb, 1g.24gb, 2g.24gb, 3g.47gb, 4g.47gb]
   * H100 96 GB - [1g.12gb, 1g.24gb, 2g.24gb, 3g.48gb, 4g.48gb]
   * H200 141 GB - [1g.18gb, 1g.35gb, 2g.35gb, 3g.71gb, 4g.71gb]
   */
  profile:
    | "1g.5gb"
    | "1g.10gb"
    | "1g.12gb"
    | "1g.18gb"
    | "1g.20gb"
    | "1g.24gb"
    | "1g.35gb"
    | "2g.10gb"
    | "2g.20gb"
    | "2g.24gb"
    | "2g.35gb"
    | "3g.20gb"
    | "3g.40gb"
    | "3g.47gb"
    | "3g.48gb"
    | "3g.71gb"
    | "4g.20gb"
    | "4g.40gb"
    | "4g.47gb"
    | "4g.48gb"
    | "4g.71gb";
}
export interface NvidiaTimeslicingGPU {
  /**
   * +value=nvidia_timeslicing_gpu
   */
  type: "nvidia_timeslicing_gpu";
  /**
   * +label=GPU Name
   * +usage=Name of the Nvidia GPU. One of [P4, P100, V100, T4, A10G, A100_40GB, A100_80GB]
   * This field is required for Node Selector and can be ignored in Nodepool Selector.
   * One instance of the card contains the following amount of memory -
   * P4: 8 GB, P100: 16 GB, V100: 16 GB, T4: 16 GB, A10G: 24 GB, A100_40GB: 40GB, A100_80GB: 80 GB
   */
  name?: string;
  /**
   * +label=GPU Memory (MB)
   * +usage=Amount of GPU memory (in MB) to allocate. Please note, this limit is not being enforced today but will be in future. Applications are expected to operate in co-opertative mode
   */
  gpu_memory: number;
}
export interface GcpTPU {
  /**
   * +value=gcp_tpu
   */
  type: "gcp_tpu";
  /**
   * +label=TPU Type name
   * +usage=Name of the TPU Type. One of
   *   - `tpu-v4-podslice` (TPU v4, ct4p)
   *   - `tpu-v5-lite-device` (TPU v5e, ct5l)
   *   - `tpu-v5-lite-podslice`  (TPU v5e, ct5lp)
   *   - `tpu-v5p-slice` (TPU v5p, ct5p)
   */
  name: string;
  /**
   * +label=Slice Topology
   * +usage=Topology of the TPU slices. Currently only single-host topology is supported.
   *  Please refer to [TPUs on GKE docs](https://cloud.google.com/kubernetes-engine/docs/concepts/tpus#plan-tpu-configuration)
   *  Allowed Values:
   *    - `2x2x1` for `tpu-v4-podslice`
   *    - One of `1x1`, `2x2`, `2x4` for `tpu-v5-lite-device` and `tpu-v5-lite-podslice`
   *    - `2x2x1` for `tpu-v5p-slice`
   */
  topology: string;
}
/**
 * +docs=Describes the ports the service should be exposed to.
 */
export interface Port {
  /**
   * +usage=Port number to expose.
   */
  port: number;
  /**
   * +usage=Protocol for the port.
   */
  protocol: "TCP" | "UDP";
  /**
   * +usage=Expose the port
   */
  expose: boolean;
  /**
   * +label=Application Protocol
   * +usage=Application Protocol for the port.
   * Select the application protocol used by your service. For most use cases, this should be `http`(HTTP/1.1).
   * If you are running a gRPC server, select the `grpc` option.
   * This is only applicable if `expose=true`.
   */
  app_protocol?: "http" | "grpc" | "tcp";
  /**
   * +usage=Host e.g. ai.example.com, app.truefoundry.com
   * +message=Upto 253 characters, each part of host should be at most 63 characters long, can contain alphabets, digits and hypen, must begin and end with an alphanumeric characters. Parts must be separated by periods (.)
   */
  host?: string;
  /**
   * +usage=Path e.g. /v1/api/ml/, /v2/docs/
   * +message=Should begin and end with a forward slash (/). Each part can can contain alphabets, digits and hypen, must begin and end with an alphanumeric characters. Parts should be separated by forward slashes (/)
   */
  path?: string;
  /**
   * +label=Rewrite Path to
   * +usage=Rewrite the path prefix to a different path.
   * If `path` is `/v1/api` and `rewrite_path_to` is `/api`. The URI in the HTTP request `http://0.0.0.0:8080/v1/api/houses` will be rewritten to `http://0.0.0.0:8080/api/houses` before the request is forwarded your service.
   * Defaults to `/`.
   * This is only applicable if `path` is given.
   * +message=Should begin and end with a forward slash (/). Each part can can contain alphabets, digits and hypen, must begin and end with an alphanumeric characters. Parts should be separated by forward slashes (/)
   */
  rewrite_path_to?: string;
  /**
   * +usage=Authentication method for inbound traffic
   */
  auth?: BasicAuthCreds | JwtAuthConfig | TrueFoundryInteractiveLogin;
}
/**
 * +label=Username and password
 */
export interface BasicAuthCreds {
  /**
   * +value=basic_auth
   */
  type: "basic_auth";
  /**
   * +label=Username for service auth
   * +message=Username for the user to authenticate with
   * +sort=1
   */
  username: string;
  /**
   * +label=Password for service auth
   * +message=Password for the user to authenticate with
   * +sort=2
   */
  password: string;
}
/**
 * +label=JWT Authentication
 * +usage=Configure JWT-based authentication using JWKS
 */
export interface JwtAuthConfig {
  /**
   * +value=jwt_auth
   */
  type: "jwt_auth";
  /**
   * +docs=FQN of the JWT Auth integration. You can use the FQN of your desired jwt auth integration (or add one)
   * in the  Integrations page[Integrations](/integrations) page
   * +label=JWT Auth Integration
   * +sort=200
   * +usage=FQN of the JWT Auth integration. If you can't find your integration here,
   * add it through the [Integrations](/integrations) page
   * +uiType=IntegrationSelect
   * +uiProps={"integrationType":"jwt-auth"}
   */
  integration_fqn: string;
  /**
   * +label=Enable Login
   * +usage=Enable login for the service
   * +sort=300
   */
  enable_login?: boolean;
  /**
   * +label=Claims
   * +usage=List of key-value pairs of claims to verify in the JWT token
   * +sort=400
   */
  claims?: {
    key: string;
    values: string[];
  }[];
  /**
   * +label=Paths that will bypass auth
   * +usage=List of paths that will bypass auth.
   * needs to start with a forward slash(/) and should not contain wildcards(*)
   * +sort=500
   */
  bypass_auth_paths?: string[];
}
/**
 * +label=Login with truefoundry
 */
export interface TrueFoundryInteractiveLogin {
  /**
   * +value=truefoundry_oauth
   */
  type: "truefoundry_oauth";
  /**
   * +label=Paths that will bypass auth
   * +usage=List of paths that will bypass auth.
   * needs to start with a forward slash(/) and should not contain wildcards(*)
   */
  bypass_auth_paths?: string[];
}
export interface SecretMount {
  /**
   * +value=secret
   */
  type: "secret";
  /**
   * +label=File path
   * +usage=Absolute file path where the file will be created.
   * +message=Please enter a valid file path
   */
  mount_path: string;
  /**
   * +label=Secret
   * +usage=The TrueFoundry secret whose value will be the file content.
   */
  secret_fqn: string;
}
export interface StringDataMount {
  /**
   * +value=string
   */
  type: "string";
  /**
   * +label=File Path
   * +usage=Absolute file path where the file will be created.
   * +message=Please enter a valid file path
   */
  mount_path: string;
  /**
   * +label=Data
   * +usage=The file content.
   */
  data: string;
}
export interface VolumeMount {
  /**
   * +value=volume
   */
  type: "volume";
  /**
   * +label=Volume mount path
   * +usage=Absolute file path where the volume will be mounted.
   * +message=Please enter a valid mount path
   */
  mount_path: string;
  /**
   * +label=Sub Path
   * +usage=Sub path within the volume to mount. Defaults to root of the volume.
   */
  sub_path?: string;
  /**
   * +label=Volume
   * +usage=The TrueFoundry volume that needs to be mounted.
   */
  volume_fqn: string;
}
export interface Kustomize {
  /**
   * +label=Patch
   * +usage=Content of kustomization.yaml to perform kustomize operation. Please do not include the `resources` section. It is filled in automatically
   */
  patch?: {};
  /**
   * +label=Additional Manifests
   * +usage=Additional kubernetes manifests to be included in the application
   */
  additions?: {}[];
}
/**
 * +docs=Describes the configuration for the Health Probe's
 * To learn more you can go [here](https://docs.truefoundry.com/docs/liveness-readiness-probe)
 * +icon=fa-heart
 * +uiType=HealthProbe
 */
export interface HealthProbe {
  config: HttpProbe;
  /**
   * +usage=Time to wait after container has started before checking the endpoint
   */
  initial_delay_seconds?: number;
  /**
   * +usage=How often to check the endpoint
   */
  period_seconds?: number;
  /**
   * +usage=Time to wait for a response from the endpoint before considering it down
   */
  timeout_seconds?: number;
  /**
   * +usage=Number of successful responses from the endpoint before container is considered healthy
   */
  success_threshold?: number;
  /**
   * +usage=Number of consecutive failures before the container is considered down
   */
  failure_threshold?: number;
}
/**
 * +docs=Describes the Instructions for assessing container health by executing an HTTP GET request.
 * To learn more you can go [here](https://docs.truefoundry.com/docs/liveness-readiness-probe)
 * +label=Instructions for assessing container health by executing an HTTP GET request.
 */
export interface HttpProbe {
  /**
   * +sort=1
   * +label=Request Type
   * +value=http
   */
  type: "http";
  /**
   * +usage=Path to the health check endpoint
   * +sort=2
   */
  path: string;
  /**
   * +usage=Listening port for the health check endpoint
   * +sort=3
   */
  port: number;
  /**
   * +sort=4
   * +usage=Host name to connect to, defaults to the pod IP
   */
  host?: string;
  /**
   * +sort=5
   * +usage=Scheme to use for connecting to the host
   */
  scheme?: string;
}
export interface BaseAutoscaling {
  /**
   * +label=Minimum replicas
   * +usage=Minimum number of replicas to keep available
   * +sort=1
   */
  min_replicas: number;
  /**
   * +label=Maximum replicas
   * +usage=Maximum number of replicas allowed for the component.
   * +sort=2
   */
  max_replicas: number;
  /**
   * +label=Polling Interval
   * +usage=This is the interval to check each trigger on.
   */
  polling_interval?: number;
}
export interface CPUUtilizationMetric {
  /**
   * +value=cpu_utilization
   */
  type: "cpu_utilization";
  /**
   * +label=CPU utilization %
   * +usage=Percentage of cpu request averaged over all replicas which the autoscaler should try to maintain
   */
  value: number;
}
export interface RPSMetric {
  /**
   * +value=rps
   */
  type: "rps";
  /**
   * +label=Requests per second
   * +usage=Average request per second averaged over all replicas that autoscaler should try to maintain
   */
  value: number;
}
export interface CronMetric {
  /**
   * +value=cron
   */
  type: "cron";
  /**
   * +label=Desired Replicas
   * +usage=Desired number of replicas during the given interval. Default value is max_replicas.
   */
  desired_replicas?: number;
  /**
   * +label=Start Schedule
   * +docs=Cron expression indicating the start of the cron schedule.
   * +usage=Cron expression indicating the start of the cron schedule.
   * ```
   * * * * * *
   * | | | | |
   * | | | | |___ day of week (0-6) (Sunday is 0)
   * | | | |_____ month (1-12)
   * | | |_______ day of month (1-31)
   * | |_________ hour (0-23)
   * |___________ minute (0-59)
   * ```
   */
  start: string;
  /**
   * +label=End Schedule
   * +docs=Cron expression indicating the end of the cron schedule.
   * +usage=Cron expression indicating the end of the cron schedule.
   * ```
   * * * * * *
   * | | | | |
   * | | | | |___ day of week (0-6) (Sunday is 0)
   * | | | |_____ month (1-12)
   * | | |_______ day of month (1-31)
   * | |_________ hour (0-23)
   * |___________ minute (0-59)
   * ```
   */
  end: string;
  /**
   * +usage=Timezone against which the cron schedule will be calculated, e.g. "Asia/Tokyo". Default is machine's local time.
   * https://docs.truefoundry.com/docs/list-of-supported-timezones
   */
  timezone: string;
}
export interface Autoshutdown {
  /**
   * +label=Wait Time
   * +usage=The period to wait after the last received request before scaling the replicas to 0
   */
  wait_time: number;
}
/**
 * +docs=This strategy updates the pods in a rolling fashion such that a subset of the
 * total pods are replaced with new version at one time.
 * A commonly used strategy can be to have maxUnavailablePercentage close to 0 so that there
 * is no downtime and keep the maxSurgePercentage to around 25%. If you are anyways running
 * a large number of pods, the service can often tolerate a few pods going down - so you
 * max maxUnavailablePercentage = 10 and maxSurgePercentage=0. You can read about it more
 * [here](https://spot.io/resources/kubernetes-autoscaling/5-kubernetes-deployment-strategies-roll-out-like-the-pros/)
 * +label=Rolling update strategy
 */
export interface Rolling {
  /**
   * +value=rolling_update
   */
  type: "rolling_update";
  /**
   * +label=Max unavailable(%)
   * +usage=Percentage of total replicas that can be brought down at one time.
   * For a value of 25 when replicas are set to 12 this would mean minimum (25% of 12) = 3 pods might be unavailable during the deployment.
   * Setting this to a higher value can help in speeding up the deployment process.
   */
  max_unavailable_percentage: number;
  /**
   * +label=Max Surge(%)
   * +usage=Percentage of total replicas of updated image that can be brought up over the total replicas count.
   * For a value of 25 when replicas are set to 12 this would mean (12+(25% of 12) = 15) pods might be running at one time.
   * Setting this to a higher value can help in speeding up the deployment process.
   */
  max_surge_percentage: number;
}
/**
 * +docs=This strategy brings up the new release without bringing the older release down. Traffic is shifted from the older release to the newer release in a staged manner.
 * This can help with verifying the health of the new release without shifting complete traffic.
 * +label=Canary strategy
 */
export interface Canary {
  /**
   * +value=canary
   */
  type: "canary";
  /**
   * +docs=These steps would be executed in order to enable shifting of traffic slowly from stable to canary version
   * +label=Steps
   */
  steps: CanaryStep[];
}
export interface CanaryStep {
  /**
   * +docs=Percentage of total traffic to be shifted to the canary release.
   * The rest will continue to go to the existing deployment
   * +label=Canary weight percentage
   * +unit=%
   * +placeholder=Weight
   */
  weight_percentage: number;
  /**
   * +docs=Duration for which to pause the release. The release process will wait for these seconds before proceeding to the next step.
   * If this is not set, the step will pause indefinitely on this step
   * +label=Pause duration
   * +unit=seconds
   * +placeholder=Duration
   */
  pause_duration?: number;
}
/**
 * +docs=This strategy brings up the new release completely before switching the complete load to the new release.
 * This minimizes the time that two versions are serving traffic at the same time.
 * +label=Blue Green strategy
 */
export interface BlueGreen {
  /**
   * +value=blue_green
   */
  type: "blue_green";
  /**
   * +docs=Promote the new release to handle the complete traffic. A manual promotion would be needed if this is disabled
   * +label=Auto-promotion
   */
  enable_auto_promotion?: boolean;
  /**
   * +docs=Promote the new release to handle the complete traffic after waiting for these many seconds
   * +label=Auto-promotion seconds
   */
  auto_promotion_seconds?: number;
}
export interface SQSQueueMetricConfig {
  /**
   * +value=sqs
   */
  type: "sqs";
  /**
   * +label=Queue length
   * +usage=Upper limit of the number of backlog messages the auto-scaler will try to maintain per replica. If you set this number to 10 and have 30 messages in the queue and one replica, the auto-scaler will scale the number of replicas to 3.
   */
  queue_length: number;
}
export interface NATSMetricConfig {
  /**
   * +value=nats
   */
  type: "nats";
  /**
   * +label=Lag Threshold
   * +usage=Upper limit of the number of backlog messages the auto-scaler will try to maintain per replica. If you set this number to 10 and have 30 messages in the stream and one replica, the auto-scaler will scale the number of replicas to 3.
   */
  lag_threshold: number;
}
export interface KafkaMetricConfig {
  /**
   * +value=kafka
   */
  type: "kafka";
  /**
   * +label=Lag Threshold
   * +usage=Upper limit of the number of backlog messages the auto-scaler will try to maintain per replica. If you set this number to 10 and have 30 messages in the stream and one replica, the auto-scaler will scale the number of replicas to 3.
   */
  lag_threshold: number;
}
export interface WorkerConfig {
  /**
   * +label=Input Config
   * +usage=Input Config
   * +sort=1
   */
  input_config:
    | SQSInputConfig
    | NATSInputConfig
    | KafkaInputConfig
    | AMQPInputConfig;
  /**
   * +label=Output Config
   * +usage=Output Config
   * +sort=2
   */
  output_config?:
    | SQSOutputConfig
    | NATSOutputConfig
    | CoreNATSOutputConfig
    | KafkaOutputConfig
    | AMQPOutputConfig;
  /**
   * +label=Number of Concurrent Workers
   * +usage=Number of concurrent workers to spawn for the processor
   * +sort=3
   */
  num_concurrent_workers: number;
}
/**
 * +docs=Describes the configuration for the input SQS worker
 * +label=SQS
 */
export interface SQSInputConfig {
  /**
   * +value=sqs
   */
  type: "sqs";
  /**
   * +label=Queue URL
   * +usage=AWS SQS Queue URL of Subscriber
   * +sort=1
   */
  queue_url: string;
  /**
   * +label=Region Name
   * +usage=AWS Region Name
   * +sort=2
   */
  region_name: string;
  /**
   * +label=Visibility Timeout (seconds)
   * +usage=A period during which Amazon SQS prevents all consumers from receiving and processing the message. If one message takes 5 seconds to process, you can set this number to 7 or any number higher than 5. This will ensure that while the message is being processed, it will not be available to other replicas. For more information, see [here](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html)
   * +sort=3
   */
  visibility_timeout: number;
  /**
   * +label=Wait Time Seconds
   * +usage=Wait timeout for long polling. For more information, see [here](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-short-and-long-polling.html)
   */
  wait_time_seconds: number;
  auth: AWSAccessKeyAuth;
}
/**
 * +docs=Describes the configuration for the input NATS worker
 * +label=NATS
 */
export interface NATSInputConfig {
  /**
   * +value=nats
   */
  type: "nats";
  /**
   * +label=NATS URL
   * +usage=Input NATS URL
   * +sort=1
   */
  nats_url: string;
  /**
   * +label=Stream Name
   * +usage=Name of the NATS stream
   * +sort=2
   */
  stream_name: string;
  /**
   * +label=Root Subject
   * +usage=Root subject of input NATS
   * +message=Input NATS root subject should only contain alphanumeric letters, dashes(-), and periods(.)
   * +sort=3
   */
  root_subject: string;
  /**
   * +label=Consumer Name
   * +usage=Consumer name of input NATS
   * +message=Consumer name should only contain alphanumeric letters, dashes(-), and underscores(_)
   * +sort=4
   */
  consumer_name: string;
  /**
   * +label=Wait Time Seconds
   * +usage=Wait timeout for long polling.
   * +sort=5
   */
  wait_time_seconds: number;
  /**
   * +label=NATS metrics URL
   * +usage=URL for the NATS metrics endpoint. It is compulsory if you want to use NATS autoscaling.
   * +message=NATS Metrics URL should be a valid HTTP/HTTPS URL
   */
  nats_metrics_url?: string;
  auth?: NATSUserPasswordAuth;
}
/**
 * +docs=NATS User Password Authentication
 * +label=NATS User Password Authentication
 */
export interface NATSUserPasswordAuth {
  /**
   * +label=Account Name
   * +usage=Name of the NATS account
   * +sort=1
   */
  account_name: string;
  /**
   * +label=User
   * +usage=User for NATS authentication
   * +sort=2
   */
  user: string;
  /**
   * +label=Password
   * +usage=Password for NATS authentication
   * +sort=3
   */
  password: string;
}
/**
 * +docs=Describes the configuration for the input Kafka worker
 * +label=Kafka
 */
export interface KafkaInputConfig {
  /**
   * +value=kafka
   */
  type: "kafka";
  /**
   * +label=Bootstrap servers
   * +usage='Kafka Bootstrap servers - Comma separated list of Kafka brokers "hostname:port" to connect to for bootstrap'
   * +sort=1
   */
  bootstrap_servers: string;
  /**
   * +label=Topic Name
   * +usage=Kafka topic to subscribe to
   * +sort=2
   */
  topic_name: string;
  /**
   * +label=Consumer Group Name
   * +usage=The name of the consumer group to join for dynamic partition assignment
   * +sort=3
   */
  consumer_group: string;
  /**
   * +label=TLS
   * +usage=TLS configuration for SASL authentication
   */
  tls: boolean;
  /**
   * +label=Wait Time Seconds
   * +usage=Wait timeout for long polling.
   */
  wait_time_seconds?: number;
  auth?: KafkaSASLAuth;
}
export interface KafkaSASLAuth {
  /**
   * +label=Username
   * +usage=Username for SASL authentication
   * +sort=1
   */
  username: string;
  /**
   * +label=Password
   * +usage=Password for SASL authentication
   * +sort=2
   */
  password: string;
}
/**
 * +docs=Describes the configuration for the output SQS worker
 * +label=SQS
 */
export interface SQSOutputConfig {
  /**
   * +value=sqs
   */
  type: "sqs";
  /**
   * +label=Queue URL
   * +usage=AWS SQS Queue URL of Publisher
   * +sort=1
   */
  queue_url: string;
  /**
   * +label=Region Name
   * +usage=AWS Region Name
   * +sort=2
   */
  region_name: string;
  auth: AWSAccessKeyAuth;
}
/**
 * +docs=Describes the configuration for the output NATS worker
 * +label=NATS
 */
export interface NATSOutputConfig {
  /**
   * +value=nats
   */
  type: "nats";
  /**
   * +label=NATS URL
   * +usage=Output NATS URL
   * +sort=1
   */
  nats_url: string;
  /**
   * +label=Root Subject
   * +usage=Root subject of output NATS
   * +message=Output NATS root subject should only contain alphanumeric letters, dashes(-), and periods(.)
   * +sort=2
   */
  root_subject: string;
  auth?: NATSUserPasswordAuth;
}
/**
 * +docs=Describes the configuration for the output Core NATS worker
 * +label=Core NATS
 */
export interface CoreNATSOutputConfig {
  /**
   * +value=core-nats
   */
  type: "core-nats";
  /**
   * +label=NATS URL
   * +usage=Output NATS URL
   * +sort=1
   */
  nats_url: string;
  /**
   * +label=Root Subject
   * +usage=Root subject of output NATS
   * +message=Output NATS root subject should only contain alphanumeric letters, dashes(-), and periods(.)
   * +sort=2
   */
  root_subject: string;
  auth?: NATSUserPasswordAuth;
}
/**
 * +docs=Describes the configuration for the output Kafka worker
 * +label=Kafka
 */
export interface KafkaOutputConfig {
  /**
   * +value=kafka
   */
  type: "kafka";
  /**
   * +label=Bootstrap servers
   * +usage='Kafka Bootstrap servers - Comma separated list of Kafka brokers "hostname:port" to connect to for bootstrap'
   * +sort=1
   */
  bootstrap_servers: string;
  /**
   * +label=Topic Name
   * +usage=Kafka topic to publish to
   * +sort=2
   */
  topic_name: string;
  /**
   * +label=TLS
   * +usage=TLS configuration for SASL authentication
   */
  tls: boolean;
  auth?: KafkaSASLAuth;
}
export interface AsyncProcessorSidecar {
  /**
   * +label=Destination URL
   * +usage=URL for the processor to invoke
   */
  destination_url: string;
  /**
   * +label=Request Timeout Seconds
   * +usage=Timeout for the invoke request in seconds
   */
  request_timeout?: number;
  /**
   * +label=Sidecar Image
   * +usage=Image for the processor sidecar (This field will be deprecated in the future)
   */
  sidecar_image?: string;
}
/**
 * +docs=Describes the configuration for the job
 */
export interface Job {
  /**
   * +value=job
   */
  type: "job";
  /**
   * +usage=Name of the job
   * +sort=1
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +docs=Specify whether you want to deploy a Docker image or build and deploy from source code
   * +label=Deploy a Docker image or build and deploy from source code
   * +icon=fa-solid fa-cloud-arrow-up:#21B6A8
   * +sort=200
   */
  image: Build | Image;
  /**
   * +docs=Specify the trigger
   * +sort=300
   */
  trigger: Manual | Schedule;
  /**
   * +docs=Trigger on deploy
   * +sort=350
   * +usage=Trigger the job after deploy immediately
   */
  trigger_on_deploy?: boolean;
  /**
   * +label=Params for input
   * +usage=Configure params and pass it to create different job runs
   * +sort=400
   */
  params?: Param[];
  /**
   * +label=Environment Variables
   * +usage=Configure environment variables to be injected in the service either as plain text or secrets. [Docs](https://docs.truefoundry.com/docs/env-variables)
   * +icon=fa-globe
   * +sort=500
   */
  env?: {
    [k: string]: string;
  } | null;
  resources?: Resources;
  /**
   * +label=Alerts
   * +usage=Configure alerts to be sent when the job starts/fails/completes
   * +icon=fa-bell
   * +sort=650
   */
  alerts?: JobAlert[];
  /**
   * +label=Retries
   * +usage=Specify the maximum number of attempts to retry a job before it is marked as failed.
   * +icon=fa-repeat
   * +sort=700
   */
  retries?: number;
  /**
   * +label=Timeout
   * +usage=Job timeout in seconds.
   * +icon=fa-clock
   * +sort=800
   */
  timeout?: number;
  /**
   * +label=Concurrency Limit
   * +usage=Number of runs that can run concurrently
   * +icon=fa-copy
   * +sort=900
   */
  concurrency_limit?: number;
  /**
   * +sort=1000
   */
  service_account?: string;
  /**
   * +usage=Configure data to be mounted to job pod(s) as a string, secret or volume. [Docs](https://docs.truefoundry.com/docs/mounting-volumes-job)
   */
  mounts?: (SecretMount | StringDataMount | VolumeMount)[];
  /**
   * +label=Labels
   */
  labels?: {
    [k: string]: string;
  };
  kustomize?: Kustomize;
  /**
   * +label=Workspace FQN
   * +docs=Fully qualified name of the workspace
   * +uiType=Hidden
   */
  workspace_fqn?: string;
}
/**
 * +docs=Describes that we are going to manually trigger our job.
 * +label=Manual
 * +usage=Trigger the job manually. [Docs](https://docs.truefoundry.com/docs/deploy-a-cron-job)
 */
export interface Manual {
  /**
   * +value=manual
   */
  type: "manual";
}
/**
 * +docs=Describes that we are going to schedule our job to run at a schedule, making our job a cron job.
 * +label=Schedule
 * +usage=Run the job on a schedule. [Docs](https://docs.truefoundry.com/docs/deploy-a-cron-job)
 */
export interface Schedule {
  /**
   * +value=scheduled
   */
  type: "scheduled";
  /**
   * +docs=Specify the schedule for this job to be run periodically in cron format. [Learn more](https://docs.truefoundry.com/docs/deploy-a-cron-job)
   * +usage=Specify the schedule for this job to be run periodically in cron format.
   * ```
   * * * * * *
   * | | | | |
   * | | | | |___ day of week (0-6) (Sunday is 0)
   * | | | |_____ month (1-12)
   * | | |_______ day of month (1-31)
   * | |_________ hour (0-23)
   * |___________ minute (0-59)
   * ```
   */
  schedule: string;
  /**
   * +usage=Choose whether to allow this job to run while another instance of the job is running, or to replace the currently running instance. Allow
   * will enable multiple instances of this job to run. Forbid will keep the current instance of the job running and stop a new instance from being run.
   * Replace will terminate any currently running instance of the job and start a new one.
   */
  concurrency_policy: "Forbid" | "Allow" | "Replace";
  /**
   * +usage=Timezone against which the cron schedule will be calculated, e.g. "Asia/Tokyo". Default is machine's local time.
   * https://docs.truefoundry.com/docs/list-of-supported-timezones
   */
  timezone?: string;
}
export interface Param {
  /**
   * +usage=Name of the param
   * +message=name can contain lower case alphabets, digits, underscore (_) and hypen (-). It can be 32 characters long, should start with an alphabet, and should end with either an alphabet or digit.
   */
  name: string;
  /**
   * +usage=Description of param
   * +message=description cannot be longer than 127 characters
   */
  description?: string;
  /**
   * +usage=Default value or placeholder
   * +message=default value cannot be longer than 127 characters
   * +label=Default value
   */
  default?: string;
  param_type?: "string" | "ml_repo";
}
/**
 * +docs=Describes the configuration for the job alerts
 * +label=Alert
 */
export interface JobAlert {
  /**
   * +label=Notification Channel
   * +usage=Specify the notification channel to send alerts to
   * +uiType=IntegrationSelect
   * +uiProps={"integrationType":"notification-channel"}
   * +sort=660
   */
  notification_channel: string;
  /**
   * +label=To Emails
   * +usage=List of recipients' email addresses if the notification channel is Email.
   * +docs=Specify the emails to send alerts to
   * +sort=665
   */
  to_emails?: string[];
  /**
   * +label=On Start
   * +usage=Send an alert when the job starts
   * +sort=670
   */
  on_start?: boolean;
  /**
   * +label=On Completion
   * +usage=Send an alert when the job completes
   * +sort=680
   */
  on_completion?: boolean;
  /**
   * +label=On Failure
   * +usage=Send an alert when the job fails
   * +sort=690
   */
  on_failure?: boolean;
}
export interface Helm {
  /**
   * +value=helm
   */
  type: "helm";
  /**
   * +sort=1
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   * +usage=Name of the Helm deployment. This will be set as the release name of the chart you are deploying.
   */
  name: string;
  /**
   * +label=Labels
   * +usage=Add labels to base argo app
   */
  labels?: {
    [k: string]: string;
  };
  /**
   * +label=Source helm repository
   * +sort=2
   */
  source: HelmRepo | OCIRepo | GitHelmRepo;
  /**
   * +label=Values
   * +usage=Values file as block file
   */
  values?: {};
  kustomize?: Kustomize;
  ignoreDifferences?: {}[];
  /**
   * +label=Workspace FQN
   * +docs=Fully qualified name of the workspace
   * +uiType=Hidden
   */
  workspace_fqn?: string;
}
export interface HelmRepo {
  /**
   * +value=helm-repo
   */
  type: "helm-repo";
  /**
   * +label=Helm repository URL
   * +sort=1
   * +message=Needs to be a valid URL.
   */
  repo_url: string;
  /**
   * +docs=FQN of the helm repo integration. You can use the FQN of your desired helm integration (or add one)
   * in the  Integrations page[Integrations](https://app.truefoundry.tech/integrations) page
   * +label=Helm repo integration
   * +sort=2
   * +usage=FQN of the helm repo integration. If you can't find your integration here,
   * add it through the [Integrations](/integrations) page
   * +uiType=IntegrationSelect
   * +uiProps={"integrationType":"helm-repo"}
   */
  integration_fqn?: string;
  /**
   * +label=Chart name
   * +sort=3
   * +usage=The helm chart name
   * +uiType=InputSelect
   * +uiProps={"creatable":true, "searchable":true}
   */
  chart: string;
  /**
   * +label=Version
   * +sort=4
   * +usage=Helm chart version
   * +uiType=InputSelect
   * +uiProps={"creatable":true, "searchable":true}
   */
  version: string;
}
/**
 * +label=OCIRepo
 */
export interface OCIRepo {
  /**
   * +value=oci-repo
   */
  type: "oci-repo";
  /**
   * +label=OCI chart URL
   * +message=Need to be a valid URL.
   */
  oci_chart_url: string;
  /**
   * +docs=FQN of the container registry. You can use the FQN of your desired container registry (or add one)
   * in the  Integrations page[Integrations](https://app.truefoundry.tech/integrations) page
   * +label=Container Registry
   * +usage=FQN of the container registry. If you can't find your registry here,
   * add it through the [Integrations](/integrations) page
   * +uiType=IntegrationSelect
   * +uiProps={"integrationType":"docker-registry"}
   */
  integration_fqn?: string;
  /**
   * +label=Version
   * +usage=Helm chart version
   */
  version: string;
}
export interface GitHelmRepo {
  /**
   * +value=git-helm-repo
   */
  type: "git-helm-repo";
  /**
   * TODO: Check this regex and add guidelines
   * +label=Git repository URL
   * +sort=1
   * +message=Needs to be a valid URL.
   */
  repo_url: string;
  /**
   * +label=Revision
   * +sort=2
   * +usage=Branch/Commit SHA/Tag of the git repo.
   */
  revision: string;
  /**
   * +label=Path
   * +sort=3
   * +usage=Path to the chart.
   */
  path: string;
  /**
   * +label=Value files
   * +sort=3
   * +usage=Helm values files for overriding values in the helm chart.
   * The path is relative to the Path directory defined above
   */
  value_files?: string[];
}
export interface ArtifactPath {
  /**
   * +label=Source path
   * +usage=Local file or folder path
   */
  src: string;
  /**
   * +label=Destination path
   * +usage=Relative path where the file or folder will be uploaded to in the artifact
   */
  dest?: string;
}
/**
 * +label=TrueFoundry Managed Source
 */
export interface TrueFoundryManagedSource {
  /**
   * +label=Type
   * +usage=Type of the source
   * +value=truefoundry
   */
  type: "truefoundry";
  /**
   * +label=URI
   * +uiType=ModelUploadInput
   * +uiProps={"hideClear":true}
   */
  uri?: string;
}
/**
 * +label=External Blob Storage Source
 */
export interface ExternalBlobStorageSource {
  /**
   * +label=Type
   * +usage=Type of the source
   * +value=external
   */
  type: "external";
  /**
   * +label=URI
   * +usage=URI referencing a path in the blob storage bucket linked to the MLRepo
   */
  uri: string;
}
export interface LocalArtifactSource {
  /**
   * +label=Type
   * +usage=Type of the source
   * +value=local
   */
  type: "local";
  /**
   * +label=Paths
   * +usage=Array of ArtifactPath objects representing the source and destination paths
   */
  paths: ArtifactPath[];
}
/**
 * +label=AWS Access Key Based Auth
 */
export interface AwsAccessKeyBasedAuth {
  /**
   * +value=access-key-based
   */
  type: "access-key-based";
  /**
   * +label=AWS access key ID
   * +usage=AWS access key ID that you want to use for authentication.
   * +sort=100
   * +uiType=Password
   */
  access_key_id: string;
  /**
   * +label=AWS access key secret
   * +usage=AWS access key secret that you want to use for authentication.
   * +sort=200
   * +uiType=Password
   */
  secret_access_key: string;
}
/**
 * +label=AWS Assumed Role Based Auth
 */
export interface AwsAssumedRoleBasedAuth {
  /**
   * +value=assumed-role-based
   */
  type: "assumed-role-based";
  /**
   * +label=AWS Assumed Role ARN
   * +usage=ARN of the role you want to assume.
   * +sort=100
   */
  assumed_role_arn: string;
}
/**
 * +label=AWS ECR
 * +icon=aws-ecr
 */
export interface AwsEcr {
  /**
   * +value=integration/docker-registry/aws/ecr
   */
  type: "integration/docker-registry/aws/ecr";
  /**
   * +label=Display Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Registry URL
   * +usage=The URL of the registry.
   * +sort=200
   */
  registry_url: string;
  /**
   * +label=Auth Data
   * +usage=Custom authentication data for the integration.
   * +sort=300
   */
  auth_data?: AwsAccessKeyBasedAuth | AwsAssumedRoleBasedAuth;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=AWS EKS
 * +icon=aws-eks
 */
export interface AwsEksIntegration {
  /**
   * +value=integration/cluster/aws/eks
   */
  type: "integration/cluster/aws/eks";
  /**
   * +label=Display Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  region: AWSRegion;
  /**
   * +label=Cluster Name
   * +usage=Name of the cluster given in the cloud account.
   * +sort=300
   */
  cluster_name: string;
  /**
   * +label=Auth Data
   * +usage=Custom authentication data for the integration.
   * +sort=400
   */
  auth_data?: AwsAccessKeyBasedAuth | AwsAssumedRoleBasedAuth;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=AWS S3
 * +icon=aws-s3
 */
export interface AwsS3 {
  /**
   * +value=integration/blob-storage/aws/s3
   */
  type: "integration/blob-storage/aws/s3";
  /**
   * +label=Display Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Storage Root
   * +usage=The root path of the storage.
   * +sort=200
   */
  storage_root: string;
  region: AWSRegion;
  /**
   * +label=Auth Data
   * +usage=Custom authentication data for the integration.
   * +sort=400
   */
  auth_data?: AwsAccessKeyBasedAuth | AwsAssumedRoleBasedAuth;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=AWS Parameter Store
 * +icon=aws-ssm
 */
export interface AwsParameterStore {
  /**
   * +value=integration/secret-store/aws/parameter-store
   */
  type: "integration/secret-store/aws/parameter-store";
  /**
   * +label=Display Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=150
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  region: AWSRegion;
  /**
   * +label=Auth Data
   * +usage=Custom authentication data for the integration.
   * +sort=300
   */
  auth_data?: AwsAccessKeyBasedAuth | AwsAssumedRoleBasedAuth;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=AWS Secrets Manager
 * +icon=aws-secrets-manager
 */
export interface AwsSecretsManager {
  /**
   * +value=integration/secret-store/aws/secrets-manager
   */
  type: "integration/secret-store/aws/secrets-manager";
  /**
   * +label=Display Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=150
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  region: AWSRegion;
  /**
   * +label=Auth Data
   * +usage=Custom authentication data for the integration.
   * +sort=300
   */
  auth_data?: AwsAccessKeyBasedAuth | AwsAssumedRoleBasedAuth;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Bedrock Model
 * +icon=aws-bedrock
 */
export interface BedrockModel {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/aws
   */
  type: "integration/model/aws";
  /**
   * +label=Auth Data
   */
  auth_data?: BedrockKeyAuth | AwsAssumedRoleBasedAuth;
  /**
   * +sort=90
   * +uiProps={"showSearch":true}
   */
  region:
    | "us-east-1"
    | "us-west-2"
    | "ap-south-1"
    | "ap-southeast-1"
    | "ap-southeast-2"
    | "ap-northeast-1"
    | "ca-central-1"
    | "eu-central-1"
    | "eu-west-1"
    | "eu-west-2"
    | "eu-west-3"
    | "sa-east-1"
    | "us-gov-west-1";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Bedrock API Key Auth
 */
export interface BedrockKeyAuth {
  /**
   * +value=api-key
   */
  type: "api-key";
  /**
   * +sort=100
   */
  access_key: string;
  /**
   * +sort=100
   */
  access_key_secret: string;
}
/**
 * +label=AWS
 * +icon=aws
 * +heroDataKey=aws_account_id
 */
export interface AwsProviderAccount {
  /**
   * +value=provider-account/aws
   */
  type: "provider-account/aws";
  /**
   * +uiProps={"disableEdit":true}
   * +label=Name
   * +usage=The name of the AWS provider account.
   * +sort=200
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=AWS Account ID
   * +usage=The AWS account ID.
   * +sort=300
   */
  aws_account_id: string;
  /**
   * +label=AWS Account Auth Data
   * +usage=Authentication data for the AWS account.
   * +sort=400
   */
  auth_data?: AwsAccessKeyBasedAuth | AwsAssumedRoleBasedAuth;
  /**
   * +label=Integrations
   * +usage=List of integrations that are associated with the AWS provider account.
   * +sort=500
   * +uiType=IntegrationsGroup
   */
  integrations: AwsIntegrations[];
}
/**
 * +label=Azure AI Inference Model
 */
export interface AzureAIInferenceModel {
  /**
   * +label=Display Name
   * +usage=Name to identify this Azure AI model
   * +sort=100
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +value=integration/model/azure/ai-inference
   */
  type: "integration/model/azure/ai-inference";
  /**
   * +label=Model Types
   * +usage=Types of models supported by this Azure AI deployment
   * +sort=200
   */
  model_types: ModelType[];
  auth_data?: AzureKeyAuth;
  /**
   * +label=Deployment Configuration
   * +usage=Configuration details for the Azure AI deployment
   * +sort=400
   */
  deploymentDetails: AzureAIManagedDeployment | AzureAIServerlessDeployment;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Azure API Key Auth
 */
export interface AzureKeyAuth {
  /**
   * +value=api-key
   */
  type: "api-key";
  /**
   * +sort=90
   */
  api_key: string;
}
/**
 * +label=Azure AI Managed Deployment
 */
export interface AzureAIManagedDeployment {
  /**
   * +value=managed
   */
  type: "managed";
  /**
   * +label=Azure Deployment Name
   * +usage=Name of the Azure AI deployment
   * +sort=1
   */
  deploymentName: string;
  /**
   * +label=Azure Endpoint Name
   * +usage=Name of the Azure AI endpoint
   * +sort=2
   */
  endpointName: string;
}
/**
 * +label=Azure AI Serverless Deployment
 */
export interface AzureAIServerlessDeployment {
  /**
   * +value=serverless
   */
  type: "serverless";
  /**
   * +label=Azure Deployment Name
   * +usage=Name of the Azure AI deployment
   * +sort=100
   */
  deploymentName: string;
  /**
   * +label=Azure Region
   * +usage=Region where the Azure AI deployment is located
   * +sort=200
   */
  region: string;
}
/**
 * +icon=azure-aks
 * +label=Azure AKS
 */
export interface AzureAksIntegration {
  /**
   * +value=integration/cluster/azure/aks
   */
  type: "integration/cluster/azure/aks";
  /**
   * +label=Display Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Resource Group
   * +usage=The resource group of the cluster in the cloud account.
   * +sort=200
   */
  resource_group: string;
  /**
   * +label=Cluster Name
   * +usage=Name of the cluster given in the cloud account.
   * +sort=300
   */
  cluster_name: string;
  auth_data?: AzureOAuth;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Azure OAuth
 */
export interface AzureOAuth {
  /**
   * +value=oauth
   */
  type: "oauth";
  /**
   * +label=Azure Tenant ID
   * +usage=The Azure Active Directory tenant (directory) ID.
   * +sort=100
   */
  tenant_id: string;
  /**
   * +label=Azure Client ID
   * +usage=The client (application) ID of an App Registration in the tenant.
   * +sort=200
   */
  client_id: string;
  /**
   * +label=Azure Client secret
   * +sort=300
   * +usage=A client secret that was generated for the App Registration.
   * +uiType=Password
   */
  client_secret: string;
  /**
   * +label=Azure Subscription ID
   * +usage=The ID of the target subscription. The value must be an UUID.
   * +sort=400
   */
  subscription_id: string;
}
/**
 * +label=Azure Basic Auth
 */
export interface AzureBasicAuth {
  /**
   * +value=basic-auth
   */
  type: "basic-auth";
  /**
   * +label=Username
   * +usage=The username for the Azure managed identity.
   * +sort=100
   */
  username: string;
  /**
   * +sort=200
   * +label=Password
   * +usage=The password for the Azure managed identity.
   * +uiType=Password
   */
  password: string;
}
/**
 * +icon=azure-blob
 * +label=Azure ABS
 */
export interface AzureBlobStorage {
  /**
   * +value=integration/blob-storage/azure/blob
   */
  type: "integration/blob-storage/azure/blob";
  /**
   * +label=Display Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Storage Root
   * +usage=The root path of the storage.
   * +sort=200
   */
  storage_root: string;
  auth_data?: AzureConnectionStringAuth;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Azure Connection String
 */
export interface AzureConnectionStringAuth {
  /**
   * +value=connection-string
   */
  type: "connection-string";
  /**
   * +label=Connection String
   * +usage=The connection string for the Azure managed identity.
   * +sort=100
   */
  connection_string: string;
}
/**
 * +icon=azure-acr
 * +label=Azure ACR
 */
export interface AzureContainerRegistry {
  /**
   * +value=integration/docker-registry/azure/acr
   */
  type: "integration/docker-registry/azure/acr";
  /**
   * +label=Display Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Registry URL
   * +usage=The URL of the registry.
   * +sort=200
   */
  registry_url: string;
  auth_data?: AzureBasicAuth;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Azure OpenAI Model
 * +icon=azure
 */
export interface AzureOpenAIModel {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   * +label=Model ID
   * +usage=This is the name of the deployment
   */
  model_id: string;
  /**
   * +value=integration/model/azure
   */
  type: "integration/model/azure";
  auth_data: AzureKeyAuth;
  /**
   * +sort=100
   * +label=Azure Endpoint
   * +usage=Azure OpenAI Service endpoint
   */
  azure_endpoint: string;
  /**
   * +sort=100
   */
  api_version: string;
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  cost?: PerThousandTokensCostMetric | PerThousandEmbeddingTokensCostMetric;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
export interface PerThousandTokensCostMetric {
  /**
   * +value=per_1000_tokens
   */
  metric: string;
  value: InputOutputBasedCostMetricValue;
}
export interface InputOutputBasedCostMetricValue {
  input: number;
  output: number;
}
export interface PerThousandEmbeddingTokensCostMetric {
  /**
   * +value=per_1000_embedding_tokens
   */
  metric: string;
  value: number;
}
/**
 * +label=Azure Vault
 * +icon=azure-vault
 */
export interface AzureVault {
  /**
   * +value=integration/secret-store/azure/vault
   */
  type: "integration/secret-store/azure/vault";
  /**
   * +label=Display Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=150
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  auth_data?: AzureOAuth;
  /**
   * +label=Azure Key vault Name
   * +usage=Name of key vault name.
   * +sort=300
   */
  key_vault_name: string;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=400
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Azure Repo
 * +icon=azure
 */
export interface AzureReposIntegration {
  /**
   * +value=integration/vcs/azure
   */
  type: "integration/vcs/azure";
  /**
   * +sort=100
   */
  name: string;
  /**
   * +label=Account Name
   * +sort=200
   */
  account_name: string;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Azure
 * +icon=azure
 * +heroDataKey=subscription_id
 */
export interface AzureProviderAccount {
  /**
   * +value=provider-account/azure
   */
  type: "provider-account/azure";
  /**
   * +uiProps={"disableEdit":true}
   * +label=Name
   * +usage=The name of the Azure provider account.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Azure Subscription Id
   * +usage=The ID of the target subscription. The value must be an UUID.
   * +sort=200
   */
  subscription_id?: string;
  /**
   * +label=Integrations
   * +usage=List of integrations that are associated with the Azure provider account.
   * +sort=400
   * +uiType=IntegrationsGroup
   */
  integrations: AzureIntegrations[];
}
/**
 * +docs=Describes the configuration for the service
 */
export interface BaseWorkbenchInput {
  /**
   * +usage=Name of the workbench. This uniquely identifies this workbench in the workspace.
   * > Name can only contain alphanumeric characters and '-' and can be atmost 25 characters long
   * +sort=1
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Home Directory Size in GB (Persistent)
   * +usage=Size of the home directory for the workbench (Persistent Storage)
   * +sort=6
   */
  home_directory_size: number;
  resources?: Resources;
  /**
   * +label=Environment Variables
   * +usage=Configure environment variables to be injected in the service either as plain text or secrets. [Docs](https://docs.truefoundry.com/docs/environment-variables-and-secrets-jobs)
   * +sort=10110
   */
  env?: {
    [k: string]: string;
  } | null;
  /**
   * +usage=Configure data to be mounted to workbench pod(s) as a string, secret or volume. [Docs](https://docs.truefoundry.com/docs/mounting-volumes-job)
   * +sort=10111
   */
  mounts?: (SecretMount | StringDataMount | VolumeMount)[];
  /**
   * +sort=10113
   */
  service_account?: string;
  kustomize?: Kustomize;
  /**
   * +label=Workspace FQN
   * +docs=Fully qualified name of the workspace
   * +uiType=Hidden
   */
  workspace_fqn?: string;
}
/**
 * +label=Bitbucket
 * +icon=bitbucket
 */
export interface BitbucketIntegration {
  /**
   * +value=integration/vcs/bitbucket
   */
  type: "integration/vcs/bitbucket";
  /**
   * +sort=100
   */
  name: string;
  /**
   * +label=Account Name
   * +sort=200
   */
  account_name: string;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Bitbucket
 * +icon=bitbucket
 */
export interface BitbucketProviderAccount {
  /**
   * +value=provider-account/bitbucket
   */
  type: "provider-account/bitbucket";
  /**
   * +uiProps={"disableEdit":true}
   */
  name: string;
  /**
   * +uiType=IntegrationsGroup
   */
  integrations: BitbucketIntegration[];
}
export interface Cluster {
  /**
   * +value=cluster
   */
  type: "cluster";
  /**
   * +label=Name
   * +icon=fa-desktop:#black
   * +sort=10
   * +message=3 to 35 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Cluster Type
   * +icon=fa-cloud:#7EC8E3
   * +sort=20
   * +usage=The cluster type of this cluster
   */
  cluster_type:
    | "aws-eks"
    | "gcp-gke-standard"
    | "azure-aks"
    | "generic"
    | "civo-talos";
  /**
   * +label=Environments
   * +icon=fa-tags:#black
   * +usage=Tag the environment like dev, staging or production. You will need to [create environments](https://docs.truefoundry.com/docs/key-concepts#creating-environments) if you don't have already.
   * +sort=30
   */
  environment_names: string[];
  /**
   * +label=Base Domain URLs
   * +placeholder=Enter Base Domain URL eg. devtest.mydomain.com or *.mydomain.com
   * +usage=One or more base URLs, which can be either a wildcard domain (resulting in app URLs like `<app-name>-<workspace-name>.<base-domain-URL>`) or a non-wildcard domain (resulting in app URLs like `<base-domain-URL>/<app-name>-<workspace-name>`)
   * > Read more about routing [here](https://docs.truefoundry.com/docs/routing) and about 'A' record and domain mapping [here](https://docs.truefoundry.com/docs/setting-up-domain)
   * +icon=fa-globe:#68BBE3
   * +sort=40
   * +message=Domain URL should be valid domain or IP address
   */
  base_domains?: string[];
  /**
   * +label=Monitoring
   * +icon=fa-gear:#68BBE3
   * +sort=50
   */
  monitoring?: {
    /**
     * +label=Cluster Loki URL
     */
    loki_url?: string;
    /**
     * +label=Cluster Prometheus URL
     */
    prometheus_url?: string;
    /**
     * +label=Cluster Kubecost URL
     */
    kubecost_url?: string;
  };
  /**
   * +label=Cluster Default Registry
   * +sort=60
   */
  default_registry_fqn?: string;
  /**
   * +label=Workbench Config
   * +sort=70
   */
  workbench_config?: {
    notebook_config?: NotebookConfig;
    ssh_server_config?: SSHServerConfig;
    /**
     * +label=Default Storage Class
     * +usage=The default storage class for the home directory of workbench
     */
    default_storage_class?: string;
  };
  /**
   * +label=Cluster Integration FQN
   * +sort=75
   * +uiType=IntegrationSelect
   * +uiProps={"descriptionKey": "cluster_name","integrationType": "cluster"}
   */
  cluster_integration_fqn?: string;
  /**
   * +label=Workflow Storage Integration
   * +sort=80
   * +uiType=IntegrationSelect
   * +uiProps={"descriptionKey": "cluster_name","integrationType": "blob-storage"}
   */
  workflow_storage_integration_fqn?: string;
  /**
   * +label=Nodepools
   * +usage=Add nodepools that are already created in your cluster.
   * When deploying, applications can choose to schedule from these nodepools.
   * +sort=90
   */
  supported_nodepools?: Nodepool[];
  /**
   * +label=Node Label Keys
   * +usage=The node label keys that this cluster supports.
   * Note: You will additionally need to add `truefoundry.com/gpu_type` label for GPU-supported node pools.
   * For more information, check out [this documentation](https://docs.truefoundry.com/docs/generic-control-plane#configuring-node-pools-for-truefoundry).
   * +sort=100
   */
  node_label_keys?: {
    /**
     * +label=Nodepool Selector Label
     * +usage=The nodepool selector label that this cluster supports
     */
    nodepool_selector_label: string;
  };
  /**
   * +label=Collaborators
   * +usage=Collaborators who can access this cluster
   * +sort=110
   */
  collaborators: Collaborator[];
}
export interface NotebookConfig {
  /**
   * +label=Notebook Base Domain
   * +usage=The base domain for the cluster with which you can access your Notebooks
   */
  base_domain: string;
}
export interface SSHServerConfig {
  /**
   * +label=SSH Base Domain
   * +usage=The base domain for the cluster with which you can access your SSH containers
   * +sort=1000
   */
  base_domain: string;
  /**
   * +label=SSH Port
   * +usage=The port for the cluster with which you can access your SSH containers
   * +sort=2000
   */
  port: number;
}
/**
 * +label=Configured Nodepools
 * +usage=The nodepools that are already created in your cluster. This will be used to schedule your workloads on particular nodepools.
 */
export interface Nodepool {
  name: string;
  description?: string;
}
export interface Collaborator {
  /**
   * +label=Subject FQN
   * +usage=Fully Qualified Name of the subject. eg: user:email or team:teamname
   */
  subject: string;
  /**
   * +label=Role ID
   * +usage=Role ID for the resource
   */
  role_id: string;
}
/**
 * +usage=Workbench Image with persistent environment (Python 3.11.6)
 */
export interface WorkbenchImage {
  /**
   * +label=Image URI
   * +usage=The image URI. Specify the name of the image and the tag.
   * If the image is in Dockerhub, you can skip registry-url (for e.g. `tensorflow/tensorflow`).
   * You can use an image from a private registry using Advanced fields
   * +placeholder=registry-url/account/image:version
   */
  image_uri: string;
  /**
   * +label=Build Script
   * +usage=The build script to run when building the image.
   * This will be executed as the last step in the docker build process as the root user (RUN DEBIAN_FRONTEND=noninteractive bash -ex build_script.sh)
   * +placeholder=Enter the build script
   * +uiType=CodeEditor
   * +uiProps={"language":"shell"}
   */
  build_script?: string;
  /**
   * +docs=FQN of the container registry. You can the FQN of your desired container registry (or add one)
   * in the  Integrations page[Integrations](https://app.truefoundry.tech/integrations?tab=docker-registry) page
   * +label=Docker Registry
   * +uiType=IntegrationSelect
   * +uiProps={"integrationType":"docker-registry"}
   * +usage=FQN of the container registry. If you can't find your registry here,
   * add it through the [Integrations](/integrations?tab=docker-registry) page
   */
  docker_registry?: string;
}
/**
 * +label=Cohere Model
 */
export interface CohereIntegrations {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/cohere
   */
  type: "integration/model/cohere";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Cohere API Key Auth
 */
export interface CohereKeyAuth {
  /**
   * +value=api-key
   */
  type: "api-key";
  /**
   * +sort=100
   * +uiType=Password
   */
  api_key: string;
}
/**
 * +label=Cohere Model
 */
export interface CohereModel {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/cohere
   */
  type: "integration/model/cohere";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Cohere
 * +icon=cohere
 */
export interface CohereProviderAccount {
  /**
   * +value=provider-account/cohere
   */
  type: "provider-account/cohere";
  /**
   * +uiProps={"disableEdit":true}
   * +label=Name
   */
  name: string;
  auth_data: CohereKeyAuth;
  /**
   * +uiType=IntegrationsGroup
   */
  integrations?: CohereIntegrations[];
}
export interface ContainerTaskConfig {
  /**
   * +value=container-task-config
   */
  type: "container-task-config";
  /**
   * +docs=Specify whether you want to deploy a Docker image or build and deploy from source code
   * +label=Deploy a Docker image or build and deploy from source code
   * +icon=fa-solid fa-cloud-arrow-up:#21B6A8
   * +sort=200
   */
  image: Build | Image;
  /**
   * +label=Environment Variables
   * +usage=Configure environment variables to be injected in the task either as plain text or secrets. [Docs](https://docs.truefoundry.com/docs/env-variables)
   * +icon=fa-globe
   * +sort=200
   */
  env?: {
    [k: string]: string;
  } | null;
  resources?: Resources;
  /**
   * +usage=Configure data to be mounted to Workflow pod(s) as a volume.
   * +sort=400
   */
  mounts?: (SecretMount | StringDataMount | VolumeMount)[];
  /**
   * +label=Service Account
   * +sort=500
   */
  service_account?: string;
}
/**
 * +label=Custom Basic Auth
 */
export interface CustomBasicAuth {
  /**
   * +value=basic-auth
   */
  type: "basic-auth";
  /**
   * +label=Username
   * +usage=The username for the basic authentication.
   * +sort=100
   */
  username: string;
  /**
   * +label=Password
   * +usage=The password for the basic authentication.
   * +sort=200
   */
  password: string;
}
/**
 * +label=Custom Blob Storage
 * +icon=puzzle-piece
 */
export interface CustomBlobStorage {
  /**
   * +value=integration/blob-storage/custom
   */
  type: "integration/blob-storage/custom";
  /**
   * +label=Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Endpoint
   * +usage=The endpoint of the storage provider.
   * +sort=200
   */
  endpoint: string;
  /**
   * +label=Storage Root
   * +usage=The root path of the storage.
   * +sort=200
   */
  storage_root: string;
  auth_data: CustomBasicAuth;
}
/**
 * +label=Custom Helm Repo
 * +icon=puzzle-piece
 */
export interface CustomHelmRepo {
  /**
   * +value=integration/helm-repo/custom
   */
  type: "integration/helm-repo/custom";
  /**
   * +label=Display Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Helm Repo URL
   * +usage=The URL of the Helm Repo.
   * +sort=200
   */
  repo_url: string;
  auth_data: CustomBasicAuth;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Custom Docker Registry
 * +icon=puzzle-piece
 */
export interface CustomUsernamePasswordArtifactsRegistry {
  /**
   * +value=integration/docker-registry/custom
   */
  type: "integration/docker-registry/custom";
  /**
   * +label=Display Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Registry URL
   * +usage=The URL of the registry.
   * +sort=200
   */
  registry_url: string;
  auth_data?: CustomBasicAuth;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Custom Model
 * +icon=puzzle-piece
 */
export interface CustomModel {
  /**
   * +sort=1
   */
  name: string;
  hosted_model_name: string;
  /**
   * +message=enter valid https/http URL that should not end with trailing slash
   */
  url: string;
  model_server: "vllm-openai" | "tei" | "infinity";
  /**
   * +uiType=Hidden
   */
  tfy_application_id?: string;
  /**
   * +value=integration/model/custom
   */
  type: "integration/model/custom";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  cost?: PerThousandTokensCostMetric | PerThousandEmbeddingTokensCostMetric;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Email Notification Channel
 * +icon=envelope
 */
export interface EmailNotificationChannel {
  /**
   * +value=integration/notification-channel/email
   */
  type: "integration/notification-channel/email";
  /**
   * +label=Display Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  auth_data: SMTPCredentials;
  /**
   * +label=From Email
   * +usage=The email address from which the email will be sent.
   * +sort=1000
   */
  from_email: string;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=1200
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=SMTP Credentials
 */
export interface SMTPCredentials {
  /**
   * +value=smtp-credentials
   * +sort=250
   */
  type: "smtp-credentials";
  /**
   * +label=Host
   * +usage=The SMTP host of the email server.
   * +sort=300
   */
  host: string;
  /**
   * +label=Username
   * +usage=The username for the SMTP server.
   * +sort=400
   */
  username: string;
  /**
   * +label=Password
   * +usage=The password for the SMTP server.
   * +sort=500
   * +uiType=Password
   */
  password: string;
  /**
   * +label=Port
   * +usage=The port of the SMTP server.
   * +sort=600
   */
  port: number;
  /**
   * +label=TLS
   * +usage=Whether to use TLS for the SMTP server.
   * +sort=700
   */
  tls: boolean;
}
/**
 * +label=Custom JWT Auth Integration
 * +icon=puzzle-piece
 */
export interface CustomJWTAuthIntegration {
  /**
   * +value=integration/jwt-auth/custom
   */
  type: "integration/jwt-auth/custom";
  /**
   * +label=Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Issuer
   * +usage=The base URL of the authentication provider.
   * +sort=200
   */
  issuer: string;
  /**
   * +label=JWKS URI
   * +usage=The JSON Web Key Set URI for JWT verification.
   * +sort=300
   */
  jwks_uri: string;
  login_provider?: OAuth2LoginProvider;
}
/**
 * +label=OAuth2 Client Configuration
 * +usage=OAuth2 client configuration to get the JWT.
 */
export interface OAuth2LoginProvider {
  /**
   * +value=oauth2
   */
  type: "oauth2";
  /**
   * +label=Client ID
   * +usage=client ID for OAuth2.
   * +sort=200
   */
  client_id: string;
  /**
   * +label=Client Secret
   * +usage=Client secret or the TrueFoundry secret containing the client secret for OAuth2.
   * +sort=300
   */
  client_secret: string;
  /**
   * +label=Authorization URL
   * +usage=URL for the authorization request
   * +sort=400
   */
  authorization_url: string;
  /**
   * +label=Token URL
   * +usage=The endpoint to exchange auth code for tokens.
   * +sort=500
   */
  token_url: string;
  /**
   * +label=Scopes
   * +usage=List of scopes to request from the OAuth2 provider.
   * +sort=600
   */
  scopes: string[];
  /**
   * +label=JWT Source
   * +usage=Source of the JWT token to be used for verification.
   * +sort=700
   */
  jwt_source: "access_token" | "id_token";
}
/**
 * +label=Custom
 * +icon=puzzle-piece
 */
export interface CustomProviderAccount {
  /**
   * +value=provider-account/custom
   */
  type: "provider-account/custom";
  /**
   * +uiProps={"disableEdit":true}
   * +label=Name
   * +usage=The name of the provider account.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  auth_data?: CustomBasicAuth;
  /**
   * +label=Integrations
   * +usage=List of integrations that are associated with the provider account.
   * +sort=400
   * +uiType=IntegrationsGroup
   */
  integrations: CustomIntegrations[];
}
/**
 * +label=Data Directory
 */
export interface DataDirectory {
  /**
   * +label=Type
   * +value=data-dir
   */
  type: "data-dir";
  /**
   * +sort=1
   * +label=Name
   * +usage=Name of the data directory
   * +message=The data directory name should start with lowercase alphabets and can contain alphanumeric and can include '-' in between
   */
  name: string;
  /**
   * +label=MLRepo
   * +usage=Name of the ML Repo to create the data directory under
   * +uiType=Hidden
   */
  ml_repo: string;
  /**
   * +sort=2
   * +label=Description
   * +usage=Description for the data directory
   */
  description?: string | null;
  /**
   * +label=Metadata
   * +usage=Key Value metadata. Should be valid JSON. For e.g. `{"business-unit": "sales", "quality": "good", "rating": 4.5}`
   * +uiType=JsonInput
   */
  metadata: {};
  /**
   * +label=Data Directory Source
   * +uiType=Group
   */
  source: TrueFoundryManagedSource | ExternalBlobStorageSource;
}
/**
 * +label=Deepinfra Model
 */
export interface DeepinfraIntegrations {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/deepinfra
   */
  type: "integration/model/deepinfra";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Deepinfra API Key Auth
 */
export interface DeepinfraKeyAuth {
  /**
   * +value=api-key
   */
  type: "api-key";
  /**
   * +sort=100
   * +uiType=Password
   */
  api_key: string;
}
/**
 * +label=Deepinfra Model
 */
export interface DeepinfraModel {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/deepinfra
   */
  type: "integration/model/deepinfra";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Deepinfra
 * +icon=deepinfra
 */
export interface DeepinfraProviderAccount {
  /**
   * +value=provider-account/deepinfra
   */
  type: "provider-account/deepinfra";
  /**
   * +uiProps={"disableEdit":true}
   * +label=Name
   */
  name: string;
  auth_data: DeepinfraKeyAuth;
  /**
   * +uiType=IntegrationsGroup
   */
  integrations?: DeepinfraIntegrations[];
}
/**
 * +label=Dockerhub Basic Auth
 */
export interface DockerhubBasicAuth {
  /**
   * +value=basic-auth
   */
  type: "basic-auth";
  /**
   * +sort=100
   */
  username: string;
  /**
   * +sort=200
   * +uiType=Password
   */
  password: string;
}
/**
 * +label=Dockerhub Registry
 * +icon=docker
 */
export interface DockerhubIntegrations {
  /**
   * +value=integration/docker-registry/dockerhub
   */
  type: "integration/docker-registry/dockerhub";
  /**
   * +label=Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Registry URL
   * +sort=200
   */
  registry_url: string;
  auth_data?: DockerhubBasicAuth;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Dockerhub
 * +icon=docker
 */
export interface DockerhubProviderAccount {
  /**
   * +value=provider-account/dockerhub
   */
  type: "provider-account/dockerhub";
  /**
   * +uiProps={"disableEdit":true}
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Account Name
   */
  account_name?: string;
  auth_data?: DockerhubBasicAuth;
  /**
   * +uiType=IntegrationsGroup
   */
  integrations: DockerhubIntegrations[];
}
/**
 * +label=Dockerhub Registry
 * +icon=docker
 */
export interface DockerhubRegistry {
  /**
   * +value=integration/docker-registry/dockerhub
   */
  type: "integration/docker-registry/dockerhub";
  /**
   * +label=Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Registry URL
   * +sort=200
   */
  registry_url: string;
  auth_data?: DockerhubBasicAuth;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Dynamic Volume Config
 */
export interface DynamicVolumeConfig {
  /**
   * +label=Volume Type
   * +value=dynamic
   * +usage=Volume Type for the volume.
   */
  type: "dynamic";
  /**
   * +label=Storage Class Name
   * +usage=Name of the storage class to be used for the volume.
   */
  storage_class: string;
  /**
   * +label=Size
   * +unit=Gi
   * +usage=Size of volume in Gi
   */
  size: number;
}
export interface Endpoint {
  /**
   * +usage=Host e.g. ai.example.com, app.truefoundry.com
   * +message=Upto 253 characters, each part of host should be at most 63 characters long, can contain alphabets, digits and hypen, must begin and end with an alphanumeric characters. Parts must be separated by periods (.)
   */
  host: string;
  /**
   * +usage=Path e.g. /v1/api/ml/, /v2/docs/
   * +message=Should begin and end with a forward slash (/). Each part can can contain alphabets, digits and hypen, must begin and end with an alphanumeric characters. Parts should be separated by forward slashes (/)
   */
  path?: string;
}
export interface Environment {
  /**
   * +value=environment
   */
  type: "environment";
  /**
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   * +usage=Environment Name
   */
  name: string;
  /**
   * +sort=300
   * +uiType=MultiSelectPills
   * +label=Environment Color
   * +uiProps={"hideRadioIcon":true}
   */
  color: {};
  /**
   * +sort=400
   * +label=Environment Type
   * +message=Indicates if the environment is for production use
   * +uiType=MultiSelectPills
   * +uiProps={"hideRadioIcon":true}
   */
  isProduction: boolean;
  /**
   * +sort=500
   * +label=Optimize Environment For
   * +uiType=MultiSelectPills
   * +uiProps={"hideRadioIcon":true}
   */
  optimizeFor: "COST" | "AVAILABILITY";
}
export interface FallbackConfig {
  name: string;
  type: "gateway-fallback-config";
  rules: FallbackRule[];
}
export interface FallbackRule {
  id: string;
  when: FallbackWhen;
  fallback_models: string[];
}
export interface FallbackWhen {
  subjects?: string[];
  models?: string[];
  metadata?: {
    [k: string]: string;
  };
  response_status_codes: number[];
}
/**
 * +label=FastAI
 * +icon=fastai
 */
export interface FastAIFramework {
  /**
   * +label=Type
   * +usage=Type of the framework
   * +value=fastai
   */
  type: "fastai";
}
export interface FlyteLaunchPlan {
  id: FlyteLaunchPlanID;
  spec: FlyteLaunchPlanSpec;
  closure: unknown;
}
export interface FlyteLaunchPlanID {
  resourceType: "LAUNCH_PLAN";
  name: string;
}
export interface FlyteLaunchPlanSpec {
  workflowId: FlyteWorkflowID;
}
export interface FlyteWorkflowID {
  resourceType: "WORKFLOW";
  name: string;
}
export interface FlyteTask {
  template: FlyteTaskTemplate;
  description?: unknown;
}
export interface FlyteTaskTemplate {
  id: FlyteTaskID;
  custom: FlyteTaskCustom;
}
export interface FlyteTaskID {
  resourceType: "TASK";
  name: string;
}
export interface FlyteTaskCustom {
  truefoundry: PythonTaskConfig | ContainerTaskConfig;
}
/**
 * +docs=Describes the configuration for the python function task
 */
export interface PythonTaskConfig {
  /**
   * +value=python-task-config
   */
  type: "python-task-config";
  /**
   * +label=Image Spec
   * +docs=Specification for the image to be used for the task
   * +sort=100
   * +usage=Specify the image spec for the task
   */
  image: TaskPythonBuild | TaskDockerFileBuild;
  /**
   * +label=Environment Variables
   * +usage=Configure environment variables to be injected in the task either as plain text or secrets. [Docs](https://docs.truefoundry.com/docs/env-variables)
   * +icon=fa-globe
   * +sort=200
   */
  env?: {
    [k: string]: string;
  } | null;
  resources?: Resources;
  /**
   * +usage=Configure data to be mounted to Workflow pod(s) as a volume.
   * +sort=400
   */
  mounts?: (SecretMount | StringDataMount | VolumeMount)[];
  /**
   * +label=Service Account
   * +sort=500
   */
  service_account?: string;
}
/**
 * +docs=Describes the configuration for the python build for a task
 * +label=Python Buid Spec
 * +icon=fa-brands fa-python:#306998
 */
export interface TaskPythonBuild {
  /**
   * +value=task-python-build
   */
  type: "task-python-build";
  /**
   * +docs=FQN of the container registry. You can the FQN of your desired container registry (or add one)
   * in the  Integrations page[Integrations](https://app.truefoundry.tech/integrations?tab=docker-registry) page
   * +label=Docker Registry
   * +usage=FQN of the container registry. If you can't find your registry here,
   * add it through the [Integrations](/integrations?tab=docker-registry) page
   */
  docker_registry?: string;
  /**
   * +label=Python version
   * +usage=Python version to run your application. Should be one of the tags listed on [Official Python Docker Page](https://hub.docker.com/_/python)
   * +message=Please enter a valid Python version tag
   */
  python_version: string;
  /**
   * `Path to build context`
   * +label=Path to requirements
   * +usage=Path to `requirements.txt` relative to
   * `Path to build context`
   */
  requirements_path?: string;
  /**
   * +label=Pip packages to install
   * +usage=Define pip package requirements.
   * In Python/YAML E.g. ["fastapi>=0.90,<1.0", "uvicorn"]
   * +placeholder=Enter a pip package name E.g. fastapi>=0.90,<1.0
   */
  pip_packages?: string[];
  /**
   * +label=List of Debian packages to install.
   * +usage=Debian packages to install via `apt get`.
   * In Python/YAML E.g. ["git", "ffmpeg", "htop"]
   * +placeholder=Enter a debian package name E.g. ffmpeg
   */
  apt_packages?: string[];
  /**
   * +label=CUDA Version
   * +usage=Version of CUDA Toolkit and CUDNN to install in the image
   * These combinations are based off of publically available docker images on docker hub
   * You can also specify a valid tag of the form {cuda_version_number}-cudnn{cudnn_version_number}-{runtime|devel}-ubuntu{ubuntu_version}
   * Refer https://hub.docker.com/r/nvidia/cuda/tags for valid set of values
   * Note: We use deadsnakes ubuntu ppa to add Python that currently supports only Ubuntu 18.04, 20.04 and 22.04
   */
  cuda_version?: string;
}
/**
 * +docs=Describes the configuration for the docker build for a task
 * +label=Docker File
 * +icon=fa-brands fa-docker:#0db7ed
 */
export interface TaskDockerFileBuild {
  /**
   * +value=dockerfile
   */
  type: "task-dockerfile-build";
  /**
   * +docs=FQN of the container registry. You can the FQN of your desired container registry (or add one)
   * in the  Integrations page[Integrations](https://app.truefoundry.tech/integrations?tab=docker-registry) page
   * +label=Docker Registry
   * +usage=FQN of the container registry. If you can't find your registry here,
   * add it through the [Integrations](/integrations?tab=docker-registry) page
   */
  docker_registry?: string;
  /**
   * +label=Path to Dockerfile
   * +usage=The file path of the Dockerfile relative to project root path.
   */
  dockerfile_path: string;
  /**
   * +label=Build arguments to pass to docker build
   */
  build_args?: {
    [k: string]: string;
  };
}
export interface FlyteWorkflow {
  template: FlyteWorkflowTemplate;
  description?: unknown;
}
export interface FlyteWorkflowTemplate {
  id: FlyteWorkflowID;
}
export interface ForwardAction {
  /**
   * +value=forward
   */
  type: "forward";
  /**
   * +docs=Service uri to redirect to. This is the kubernetes fully qualified domain name that the target service can be reached on
   * Eg - For a service called `sample-service` in workspace `ws` this would be `sample-service.ws.svc.cluster.local
   * +label=Service URI
   */
  service_uri: string;
  /**
   * +docs=Port to redirect the service traffic to
   * +label=Target port
   */
  port: number;
}
export interface RateLimitConfig {
  name: string;
  type: "gateway-rate-limiting-config";
  rules: RateLimitRule[];
}
export interface RateLimitRule {
  id: string;
  when: RateLimitWhen;
  limit_to: number;
  unit: RateLimitUnit;
}
export interface RateLimitWhen {
  subjects?: string[];
  models?: string[];
  metadata?: {
    [k: string]: string;
  };
}
export interface LoadBalancingConfig {
  name: string;
  type: "gateway-load-balancing-config";
  rules: LoadBalancingRule[];
}
export interface LoadBalancingRule {
  id: string;
  when: LoadBalancingWhen;
  load_balance_targets: LoadBalanceTarget[];
}
export interface LoadBalancingWhen {
  subjects?: string[];
  models: string[];
  metadata?: {
    [k: string]: string;
  };
}
export interface LoadBalanceTarget {
  target: string;
  weight: number;
}
/**
 * +label=GCP API Key Auth
 */
export interface GcpApiKeyAuth {
  /**
   * +value=api-key
   */
  type: "api-key";
  /**
   * +label=API Key
   * +sort=100
   */
  apiKey: string;
}
/**
 * +icon=gcp-gcr
 * +label=GCP GCR
 */
export interface GcpGcr {
  /**
   * +value=integration/docker-registry/gcp/gcr
   */
  type: "integration/docker-registry/gcp/gcr";
  /**
   * +label=Display Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Registry URL
   * +usage=The URL of the registry.
   * +sort=200
   */
  registry_url: string;
  auth_data?: GcpKeyFileAuth;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=GCP Key File Auth
 */
export interface GcpKeyFileAuth {
  /**
   * +value=key-file
   */
  type: "key-file";
  /**
   * +uiType=JsonInput
   * +label=Key File Content
   * +sort=100
   */
  key_file_content: {};
}
/**
 * +icon=gcp-gcs
 * +label=GCP GCS
 */
export interface GcpGcs {
  /**
   * +value=integration/blob-storage/gcp/gcs
   */
  type: "integration/blob-storage/gcp/gcs";
  /**
   * +label=Display Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Storage Root
   * +usage=The root path of the storage.
   * +sort=200
   */
  storage_root: string;
  auth_data?: GcpKeyFileAuth;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +icon=gcp-gke
 * +label=GCP GKE
 */
export interface GcpGkeIntegration {
  /**
   * +value=integration/cluster/gcp/gke-standard
   */
  type: "integration/cluster/gcp/gke-standard";
  /**
   * +label=Display Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  location: GCPRegion;
  /**
   * +label=Cluster Name
   * +usage=Name of the cluster given in the cloud account.
   * +sort=300
   */
  cluster_name: string;
  auth_data?: GcpKeyFileAuth;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +icon=gcp-gsm
 * +label=GCP GSM
 */
export interface GcpGsm {
  /**
   * +value=integration/secret-store/gcp/gsm
   */
  type: "integration/secret-store/gcp/gsm";
  /**
   * +label=Display Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  auth_data?: GcpKeyFileAuth;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Vertex Model
 * +icon=https://assets.production.truefoundry.com/vertex-ai.png
 */
export interface VertexModel {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/gcp/vertex
   */
  type: "integration/model/gcp/vertex";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  region?: GCPRegion;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Google Model
 * +icon=googleCloud
 */
export interface GoogleModel {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/gcp/google
   */
  type: "integration/model/gcp/google";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  auth_data?: GcpApiKeyAuth;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=GCP
 * +icon=googleCloud
 * +heroDataKey=project_id
 */
export interface GcpProviderAccount {
  /**
   * +value=provider-account/gcp
   */
  type: "provider-account/gcp";
  /**
   * +uiProps={"disableEdit":true}
   * +label=Name
   * +usage=The name of the GCP provider account.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Project Id
   * +usage=The project id of the GCP account.
   * +sort=200
   */
  project_id?: string;
  /**
   * +label=GCP Account Auth Data
   * +usage=Authentication data for the GCP account.
   * +sort=400
   */
  auth_data?: GcpKeyFileAuth | GcpApiKeyAuth;
  /**
   * +label=Integrations
   * +usage=List of integrations that are associated with the GCP provider account.
   * +sort=500
   * +uiType=IntegrationsGroup
   */
  integrations: GcpIntegrations[];
}
/**
 * +label=Github
 * +icon=github
 */
export interface GithubIntegration {
  /**
   * +value=integration/vcs/github
   */
  type: "integration/vcs/github";
  /**
   * +sort=100
   */
  name: string;
  /**
   * +label=Account Name
   * +sort=200
   */
  account_name: string;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Github
 * +icon=github
 */
export interface GithubProviderAccount {
  /**
   * +value=provider-account/github
   */
  type: "provider-account/github";
  /**
   * +uiProps={"disableEdit":true}
   */
  name: string;
  /**
   * +uiType=IntegrationsGroup
   */
  integrations: GithubIntegration[];
}
/**
 * +label=Gitlab
 * +icon=gitlab
 */
export interface GitlabIntegration {
  /**
   * +value=integration/vcs/gitlab
   */
  type: "integration/vcs/gitlab";
  /**
   * +sort=100
   */
  name: string;
  /**
   * +label=Account Name
   * +sort=200
   */
  account_name: string;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Gitlab
 * +icon=gitlab
 */
export interface GitlabProviderAccount {
  /**
   * +value=provider-account/gitlab
   */
  type: "provider-account/gitlab";
  /**
   * +uiProps={"disableEdit":true}
   */
  name: string;
  /**
   * +uiType=IntegrationsGroup
   */
  integrations: GitlabIntegration[];
}
/**
 * +label=Gluon
 * +icon=gluon
 */
export interface GluonFramework {
  /**
   * +label=Type
   * +usage=Type of the framework
   * +value=gluon
   */
  type: "gluon";
}
/**
 * +label=Groq Model
 */
export interface GroqIntegrations {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/groq
   */
  type: "integration/model/groq";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Groq API Key Auth
 */
export interface GroqKeyAuth {
  /**
   * +value=api-key
   */
  type: "api-key";
  /**
   * +sort=100
   * +uiType=Password
   */
  api_key: string;
}
/**
 * +label=Groq Model
 */
export interface GroqModel {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/groq
   */
  type: "integration/model/groq";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Groq
 * +icon=groq
 */
export interface GroqProviderAccount {
  /**
   * +value=provider-account/groq
   */
  type: "provider-account/groq";
  /**
   * +uiProps={"disableEdit":true}
   * +label=Name
   */
  name: string;
  auth_data: GroqKeyAuth;
  /**
   * +uiType=IntegrationsGroup
   */
  integrations?: GroqIntegrations[];
}
/**
 * +label=H2O
 * +icon=h2o
 */
export interface H2OFramework {
  /**
   * +label=Type
   * +usage=Type of the framework
   * +value=h2o
   */
  type: "h2o";
}
export interface HeaderMatch {
  /**
   * +value=header
   */
  type: "header";
  /**
   * +docs=Header name to match on
   * +label=Name
   */
  name: string;
  /**
   * +docs=Header value to match on
   * +label=Value
   */
  exact_match: string;
}
/**
 * +label=OpenAI
 * +icon=openai
 */
export interface OpenaiProviderAccount {
  /**
   * +value=provider-account/openai
   */
  type: "provider-account/openai";
  /**
   * +uiProps={"disableEdit":true}
   */
  name: string;
  auth_data: OpenaiApiKeyAuth;
  base_url?: string;
  /**
   * +uiType=IntegrationsGroup
   */
  integrations: OpenAIIntegrations[];
}
/**
 * +label=OpenAI API Key Auth
 */
export interface OpenaiApiKeyAuth {
  /**
   * +value=api-key
   */
  type: "api-key";
  /**
   * +sort=100
   * +uiType=Password
   */
  api_key: string;
}
/**
 * +label=OpenAI Model
 * +icon=openai
 */
export interface OpenAIIntegrations {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/openai
   */
  type: "integration/model/openai";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   * +uiType=Select
   */
  model_types: ModelType[];
  cost?: PerThousandTokensCostMetric | PerThousandEmbeddingTokensCostMetric;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Jfrog
 * +icon=jfrog
 */
export interface JfrogProviderAccount {
  /**
   * +value=provider-account/jfrog
   */
  type: "provider-account/jfrog";
  /**
   * +uiProps={"disableEdit":true}
   * +label=Name
   * +usage=The name of the provider account.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Account Name
   * +usage=The name of the JFrog account.
   * +sort=200
   */
  account_name?: string;
  auth_data?: JfrogBasicAuth;
  /**
   * +label=Integrations
   * +usage=List of integrations that are associated with the provider account.
   * +sort=400
   * +uiType=IntegrationsGroup
   */
  integrations: JFrogIntegrations[];
}
/**
 * +label=Jfrog Basic Auth
 */
export interface JfrogBasicAuth {
  /**
   * +value=basic-auth
   */
  type: "basic-auth";
  /**
   * +label=Username
   * +usage=The username for the basic authentication.
   * +sort=100
   */
  username: string;
  /**
   * +sort=200
   * +label=Password
   * +usage=The password for the basic authentication.
   * +uiType=Password
   */
  password: string;
}
/**
 * +label=Jfrog Artifacts Registry
 * +icon=jfrog
 */
export interface JFrogIntegrations {
  /**
   * +value=integration/docker-registry/jfrog
   */
  type: "integration/docker-registry/jfrog";
  /**
   * +label=Display Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Registry URL
   * +usage=The URL of the registry.
   * +sort=200
   */
  registry_url: string;
  auth_data?: JfrogBasicAuth;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=TTL
 * +icon=puzzle-piece
 */
export interface TTLProviderAccount {
  /**
   * +value=provider-account/ttl
   */
  type: "provider-account/ttl";
  /**
   * +uiProps={"disableEdit":true}
   * +label=Name
   * +usage=The name of the provider account.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Integrations
   * +usage=List of integrations that are associated with the provider account.
   * +sort=400
   * +uiType=IntegrationsGroup
   */
  integrations: TTLIntegrations[];
}
/**
 * +label=TTL
 * +icon=docker
 */
export interface TTLIntegrations {
  /**
   * +value=integration/docker-registry/ttl
   */
  type: "integration/docker-registry/ttl";
  /**
   * +label=Display Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Registry URL
   * +usage=The URL of the registry.
   * +sort=200
   */
  registry_url: string;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=TrueFoundry
 * +icon=truefoundry
 */
export interface TrueFoundryProviderAccount {
  /**
   * +value=provider-account/truefoundry
   */
  type: "provider-account/truefoundry";
  /**
   * +uiProps={"disableEdit":true}
   * +label=Name
   * +usage=The name of the provider account.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Integrations
   * +usage=List of integrations that are associated with the provider account.
   * +sort=400
   * +uiType=IntegrationsGroup
   */
  integrations?: TrueFoundryIntegrations[];
}
/**
 * +label=TrueFoundry DBSSM
 * +icon=truefoundry
 */
export interface TrueFoundryDBSSM {
  /**
   * +value=integration/secret-store/truefoundry/db
   */
  type: "integration/secret-store/truefoundry/db";
  /**
   * +label=Display Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=TrueFoundry Model
 * +icon=truefoundry
 */
export interface TrueFoundryPublicModel {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  prompt_format_string?: string;
  /**
   * +value=integration/model/truefoundry
   */
  type: "integration/model/truefoundry";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  cost?: PerThousandTokensCostMetric | PerThousandEmbeddingTokensCostMetric;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Quay
 * +icon=puzzle-piece
 */
export interface QuayProviderAccount {
  /**
   * +value=provider-account/quay
   */
  type: "provider-account/quay";
  /**
   * +uiProps={"disableEdit":true}
   * +label=Name
   * +usage=The name of the provider account.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Account Name
   * +usage=The name of the account on Quay.
   * +sort=200
   */
  account_name?: string;
  auth_data?: QuayBasicAuth;
  /**
   * +label=Integrations
   * +usage=List of integrations that are associated with the provider account.
   * +sort=400
   * +uiType=IntegrationsGroup
   */
  integrations: QuayIntegrations[];
}
/**
 * +label=Quay Basic Auth
 */
export interface QuayBasicAuth {
  /**
   * +value=basic-auth
   */
  type: "basic-auth";
  /**
   * +label=Username
   * +usage=The username for the basic authentication.
   * +sort=100
   */
  username: string;
  /**
   * +label=Password
   * +usage=The password for the basic authentication.
   * +sort=200
   * +uiType=Password
   */
  password: string;
}
/**
 * +label=Quay Artifacts Registry
 * +icon=quay
 */
export interface QuayIntegrations {
  /**
   * +value=integration/docker-registry/quay
   */
  type: "integration/docker-registry/quay";
  /**
   * +label=Display Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Registry URL
   * +usage=The URL of the registry.
   * +sort=200
   */
  registry_url: string;
  auth_data?: QuayBasicAuth;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Nomic
 * +icon=nomic
 */
export interface NomicProviderAccount {
  /**
   * +value=provider-account/nomic
   */
  type: "provider-account/nomic";
  /**
   * +uiProps={"disableEdit":true}
   * +label=Name
   */
  name: string;
  auth_data: NomicKeyAuth;
  /**
   * +uiType=IntegrationsGroup
   */
  integrations?: NomicIntegrations[];
}
/**
 * +label=Nomic API Key Auth
 */
export interface NomicKeyAuth {
  /**
   * +value=api-key
   */
  type: "api-key";
  /**
   * +sort=100
   * +uiType=Password
   */
  api_key: string;
}
/**
 * +label=Nomic Model
 */
export interface NomicIntegrations {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/nomic
   */
  type: "integration/model/nomic";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Palm
 * +icon=palm
 */
export interface PalmProviderAccount {
  /**
   * +value=provider-account/palm
   */
  type: "provider-account/palm";
  /**
   * +uiProps={"disableEdit":true}
   * +label=Name
   */
  name: string;
  auth_data: PalmKeyAuth;
  /**
   * +uiType=IntegrationsGroup
   */
  integrations?: PalmIntegrations[];
}
/**
 * +label=Palm API Key Auth
 */
export interface PalmKeyAuth {
  /**
   * +value=api-key
   */
  type: "api-key";
  /**
   * +sort=100
   * +uiType=Password
   */
  api_key: string;
}
/**
 * +label=Palm Model
 */
export interface PalmIntegrations {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/palm
   */
  type: "integration/model/palm";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Perplexity-ai
 * +icon=perplexity-ai
 */
export interface PerplexityAIProviderAccount {
  /**
   * +value=provider-account/perplexity-ai
   */
  type: "provider-account/perplexity-ai";
  /**
   * +uiProps={"disableEdit":true}
   * +label=Name
   */
  name: string;
  auth_data: PerplexityAIKeyAuth;
  /**
   * +uiType=IntegrationsGroup
   */
  integrations?: PerplexityIntegrations[];
}
/**
 * +label=PerplexityAI API Key Auth
 */
export interface PerplexityAIKeyAuth {
  /**
   * +value=api-key
   */
  type: "api-key";
  /**
   * +sort=100
   * +uiType=Password
   */
  api_key: string;
}
/**
 * +label=Perplexity Model
 */
export interface PerplexityIntegrations {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/perplexity-ai
   */
  type: "integration/model/perplexity-ai";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Mistral-ai
 * +icon=mistral-ai
 */
export interface MistralAIProviderAccount {
  /**
   * +value=provider-account/mistral-ai
   */
  type: "provider-account/mistral-ai";
  /**
   * +uiProps={"disableEdit":true}
   * +label=Name
   */
  name: string;
  auth_data: MistralAIKeyAuth;
  /**
   * +uiType=IntegrationsGroup
   */
  integrations?: MistralIntegrations[];
}
/**
 * +label=MistralAI API Key Auth
 */
export interface MistralAIKeyAuth {
  /**
   * +value=api-key
   */
  type: "api-key";
  /**
   * +sort=100
   * +uiType=Password
   */
  api_key: string;
}
/**
 * +label=MistralAI Model
 */
export interface MistralIntegrations {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/mistral-ai
   */
  type: "integration/model/mistral-ai";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Together-ai
 * +icon=together-ai
 */
export interface TogetherAIProviderAccount {
  /**
   * +value=provider-account/together-ai
   */
  type: "provider-account/together-ai";
  /**
   * +uiProps={"disableEdit":true}
   * +label=Name
   */
  name: string;
  auth_data: TogetherAIKeyAuth;
  /**
   * +uiType=IntegrationsGroup
   */
  integrations?: TogetherAIIntegrations[];
}
/**
 * +label=TogetherAI API Key Auth
 */
export interface TogetherAIKeyAuth {
  /**
   * +value=api-key
   */
  type: "api-key";
  /**
   * +sort=100
   * +uiType=Password
   */
  api_key: string;
}
/**
 * +label=TogetherAI Model
 */
export interface TogetherAIIntegrations {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/together-ai
   */
  type: "integration/model/together-ai";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Ollama
 * +icon=ollama
 */
export interface OllamaProviderAccount {
  /**
   * +value=provider-account/ollama
   */
  type: "provider-account/ollama";
  /**
   * +uiProps={"disableEdit":true}
   * +label=Name
   */
  name: string;
  auth_data: OllamaKeyAuth;
  /**
   * +uiType=IntegrationsGroup
   */
  integrations: OllamaIntegrations[];
}
/**
 * +label=Ollama API Key Auth
 */
export interface OllamaKeyAuth {
  custom_host: string;
}
/**
 * +label=Ollama Model
 */
export interface OllamaIntegrations {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/ollama
   */
  type: "integration/model/ollama";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Slack Provider Account
 * +icon=slack
 */
export interface SlackProviderAccount {
  /**
   * +value=provider-account/slack
   */
  type: "provider-account/slack";
  /**
   * +uiProps={"disableEdit":true}
   * +label=Name
   * +usage=The name of the provider account.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Integrations
   * +usage=List of integrations that are associated with the provider account.
   * +sort=400
   * +uiType=IntegrationsGroup
   */
  integrations: SlackIntegrations[];
}
/**
 * +label=Slack Webhook Integration
 * +icon=https://assets.production.truefoundry.com/slack.svg
 */
export interface SlackIntegrations {
  /**
   * +value=integration/notification-channel/slack-webhook
   */
  type: "integration/notification-channel/slack-webhook";
  /**
   * +label=Display Name
   * +uiProps={"disableEdit":true}
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  auth_data: SlackWebhookAuth;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=10005
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
export interface SlackWebhookAuth {
  /**
   * +value=auth/slack-webhook
   */
  type: "slack-webhook";
  /**
   * +label=Webhook URL
   * +usage=The URL of the slack webhook
   * +sort=100
   */
  webhook_url: string;
}
/**
 * +label=Webhook Provider Account
 * +icon=webhook
 */
export interface WebhookProviderAccount {
  /**
   * +value=provider-account/webhook
   */
  type: "provider-account/webhook";
  /**
   * +uiProps={"disableEdit":true}
   * +label=Name
   * +usage=The name of the provider account.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Integrations
   * +usage=List of integrations that are associated with the provider account.
   * +sort=400
   * +uiType=IntegrationsGroup
   */
  integrations: WebhookIntegrations[];
}
/**
 * +label=Webhook Integration
 * +icon=https://assets.production.truefoundry.com/webhook.svg
 */
export interface WebhookIntegrations {
  /**
   * +value=integration/gateway-request-logger/webhook
   */
  type: "integration/gateway-request-logger/webhook";
  /**
   * +label=Display Name
   * +uiProps={"disableEdit":true}
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Webhook URL
   * +usage=The URL of the webhook endpoint
   * +sort=200
   */
  webhook_url: string;
  /**
   * +label=Authentication
   * +usage=Authentication configuration for the webhook
   * +sort=300
   */
  auth_data?: WebhookBasicAuth | WebhookBearerAuth;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=10005
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
export interface WebhookBasicAuth {
  /**
   * +value=auth/webhook-basic
   */
  type: "webhook-basic";
  /**
   * +label=Username
   * +usage=Basic auth username
   * +sort=100
   */
  username: string;
  /**
   * +label=Password
   * +usage=Basic auth password
   * +sort=200
   * +uiType=Password
   */
  password: string;
}
export interface WebhookBearerAuth {
  /**
   * +value=auth/webhook-bearer
   */
  type: "webhook-bearer";
  /**
   * +label=Token
   * +usage=Bearer token for authentication
   * +sort=100
   * +uiType=Password
   */
  token: string;
  /**
   * +label=Prefix
   * +usage=Prefix for the token
   * +sort=200
   */
  prefix: string;
}
export interface VirtualAccount {
  /**
   * +label=Name
   * +sort=1
   * +message=3 to 25 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   * +usage=Virtual Account Name
   */
  name: string;
  /**
   * +value=virtual-account
   */
  type: "virtual-account";
  /**
   * +label=Expiration Date (UTC)
   * +sort=2
   * +message=Expiration date of the virtual account
   * +usage=Expiration Date of the Virtual Account (should be in the format yyyy-mm-dd)
   * +uiType=DatePicker
   */
  expiration_date?: string;
  /**
   * +label=Permissions
   * +sort=3
   * +uiType=ServiceAccountPermissions
   */
  permissions: Permissions[];
}
export interface Permissions {
  /**
   * +label= Resource FQN
   * +usage=The fully qualified name of the resource
   */
  resource_fqn: string;
  /**
   * +label=Resource Type
   * +usage=The type of the resource (cluster, workspace, etc.)
   */
  resource_type: string;
  /**
   * +label=Role ID
   * +usage=The role id of the role to be assigned to the service account for that resource
   */
  role_id: string;
}
export interface Workspace {
  /**
   * +value=workspace
   */
  type: "workspace";
  /**
   * +label=Cluster FQN
   * +sort=150
   * +icon=fa-spider-web:#326ce5
   * +uiProps={"disableCloudProvider": true}
   */
  cluster_fqn: string;
  /**
   * +label=Name
   * +sort=200
   * +icon=fa-desktop:#black
   * +message=3 to 25 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Environment
   * +sort=300
   * +icon=fa-tags:#black
   * +usage=Tag the environment like dev, staging or production. You will need to [create environments](https://docs.truefoundry.com/docs/key-concepts#creating-environments) if you don't have already.
   */
  environment_name?: string;
  /**
   * +sort=700
   */
  labels?: {
    [k: string]: string;
  };
  /**
   * +sort=750
   */
  annotations?: {
    [k: string]: string;
  };
  /**
   * +label=Collaborators
   * +sort=500
   */
  collaborators?: Collaborator[];
  /**
   * +label=Permissions
   * +sort=500
   * +uiType=Permissions
   * +uiProps={"allowedResources": {"mlf-project": {"title": "ML Repo", "description": "ML Repos are used to store models and artifacts like git repos. MLRepos are backed by S3 / GCS / Azure bucket and you can have different ml repos with different set of permissions. [View Docs](https://docs.truefoundry.com/docs/introduction-to-ml-repo)"}}}
   */
  permissions?: Permissions[];
}
/**
 * +docs=Describes the configuration for the worflow
 */
export interface Workflow {
  /**
   * +value=workflow
   */
  type: "workflow";
  /**
   * +usage=Name of the workflow
   * +sort=1
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +docs=Source Code for the workflow, either local or remote
   * +label=Source Code for your workflow
   * +icon=fa-solid fa-cloud-arrow-up:#21B6A8
   * +sort=200
   */
  source: LocalSource | RemoteSource;
  /**
   * +label=Workflow File Path
   * +docs=Path to the workflow file relative to the project root path
   * +sort=550
   */
  workflow_file_path: string;
  /**
   * +label=Flyte Entities
   */
  flyte_entities?: (FlyteTask | FlyteWorkflow | FlyteLaunchPlan)[];
}
export interface SparkJob {
  /**
   * +value=spark-job
   * +sort=1
   */
  type: "spark-job";
  /**
   * +label=Name
   * +usage=Name of the job
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   * +sort=2
   */
  name: string;
  image: Image;
  /**
   * +label=Spark Version
   * +usage=Spark version should match the spark version installed in the image.
   * +sort=2000
   */
  spark_version: string;
  /**
   * +label=Main Application File
   * +usage=The main application file to be executed by the spark job.
   * +sort=3000
   */
  main_application_file: string;
  /**
   * +label=Arguments
   * +usage=Arguments to be passed to the main application file.
   * +sort=4000
   */
  arguments?: string;
  driver_config: SparkDriverConfig;
  executor_config: SparkExecutorConfig;
  /**
   * +label=Environment Variables
   * +usage=Configure environment variables to be injected in the service either as plain text. [Docs](https://docs.truefoundry.com/docs/env-variables)
   * +icon=fa-globe
   * +sort=21000
   */
  env?: {} | null;
  /**
   * +label=Spark Config Properties
   * +usage=Extra configuration properties to be passed to the spark job. [Docs](https://spark.apache.org/docs/latest/configuration.html)
   * +icon=fa-gear:#68BBE3
   * +sort=21500
   */
  conf?: {} | null;
  /**
   * +label=Mounts
   * +usage=Configure volumes to be mounted to driver and executors. [Docs](https://docs.truefoundry.com/docs/mounting-volumes-job)
   * +sort=22000
   * +uiType=Mounts
   */
  mounts?: VolumeMount[];
  /**
   * +label=Retries
   * +usage=Specify the maximum number of attempts to retry a job before it is marked as failed.
   * +icon=fa-repeat
   * +sort=23000
   */
  retries?: number;
  /**
   * +label=Service Account
   * +sort=24000
   */
  service_account?: string;
  /**
   * +label=Workspace FQN
   * +docs=Fully qualified name of the workspace
   * +uiType=Hidden
   */
  workspace_fqn?: string;
}
/**
 * +label=Driver Config
 */
export interface SparkDriverConfig {
  ui_endpoint: Endpoint;
  resources?: Resources;
}
/**
 * +label=Executor Config
 */
export interface SparkExecutorConfig {
  /**
   * +label=Executor Instances
   */
  instances: SparkExecutorFixedInstances | SparkExecutorDynamicScaling;
  resources?: Resources;
}
/**
 * +label=Fixed Instances
 */
export interface SparkExecutorFixedInstances {
  /**
   * +value=fixed
   */
  type: "fixed";
  /**
   * +label=Instances Count
   * +usage=Number of instances to start
   */
  count: number;
}
/**
 * +label=Dynamic Scaling
 */
export interface SparkExecutorDynamicScaling {
  /**
   * +value=dynamic
   */
  type: "dynamic";
  /**
   * +label=Min Instances
   * +usage=Minimum number of instances to start / scale down to
   * +sort=100
   */
  min: number;
  /**
   * +label=Max Instances
   * +usage=Maximum number of instances to scale up to
   * +sort=200
   */
  max: number;
}
export interface Volume {
  /**
   * +value=volume
   */
  type: "volume";
  /**
   * +sort=1
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   * +usage=Name of the Volume. This will be set as the volume name.
   */
  name: string;
  /**
   * +sort=2
   * +label=Volume Config
   * +message=Volume Configuration, can be either Dynamically provisioned or statically provisioned.
   */
  config: DynamicVolumeConfig | StaticVolumeConfig;
  volume_browser?: VolumeBrowser;
  /**
   * +label=Workspace FQN
   * +docs=Fully qualified name of the workspace
   * +uiType=Hidden
   */
  workspace_fqn?: string;
}
/**
 * +label=Static Volume Config
 */
export interface StaticVolumeConfig {
  /**
   * +label=Volume Type
   * +value=static
   * +usage=Volume Type for the volume.
   */
  type: "static";
  /**
   * +label=Persistent Volume
   * +usage=Persistent Volume Name of the volume to be used.
   */
  persistent_volume_name: string;
}
/**
 * +label=Volume Browser
 */
export interface VolumeBrowser {
  /**
   * +message=3 to 10 lower case characters long alphanumeric word, may contain - in between, cannot start with a number.
   * +usage=Username for logging in the volume browser.
   * +sort=1
   */
  username: string;
  /**
   * +label=Password Secret FQN
   * +usage=TFY Secret containing the password for logging in the volume browser.
   * +sort=2
   */
  password_secret_fqn: string;
  endpoint: Endpoint;
  /**
   * +label=Service Account Name
   * +usage=Kubernetes Service account name for the volume browser.
   * +sort=4
   */
  service_account?: string;
}
export interface Intercept {
  /**
   * +value=intercept
   */
  type: "intercept";
  /**
   * +sort=1
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   * +usage=Name of the service this intercept is for
   */
  name: string;
  rules: {
    /**
     * +docs=Port of service to be intercepted
     * +label=Service port
     */
    port: number;
    match?: HeaderMatch;
    /**
     * +docs=Action to take on succesful match
     * +label=Action
     */
    action: ForwardAction | MirrorAction;
  }[];
}
export interface MirrorAction {
  /**
   * +value=mirror
   */
  type: "mirror";
  /**
   * +docs=Service uri to mirror to. This is the kubernetes fully qualified domain name that the target service can be reached on
   * Eg - For a service called `sample-service` in workspace `ws` this would be `sample-service.ws.svc.cluster.local
   * +label=Service URI
   */
  service_uri: string;
  /**
   * +docs=Port to redirect the service traffic to
   * +label=Target port
   */
  port: number;
  /**
   * +docs=Percentage of requests to mirror
   * +label=Percentage
   */
  percentage: number;
}
/**
 * +label=MLRepo
 * +usage=MLRepo is a repository ML training runs that log params, metrics, plots, images and versioned entities like artifacts, models, prompts, tools, agents
 */
export interface MLRepo {
  /**
   * +value=ml-repo
   */
  type: "ml-repo";
  /**
   * +label=Name
   * +icon=fa-desktop:#black
   * +usage=Name of the ML Repo.
   * +message=Alphanumeric word, may contain '-' with a maximum length of 100 characters
   * +sort=1
   */
  name: string;
  /**
   * +label=Description
   * +icon=fa-desktop:#black
   * +usage=Description for the ML Repo.
   * +message=Description can be maximum 500 characters
   * +sort=2
   * +placeholder=MLRepo to track text-classification experiments and models
   * +uiProps={"descriptionInline":true}
   */
  description?: string;
  /**
   * +label=Storage Integration
   * +icon=hard-drive
   * +usage=Storage Integration to store artifacts and models. A storage integration represents a connected blob storage like AWS S3 / Azure Blob Storage / Google Cloud Storage.
   * +message=Select the storage-integration where you want to save your artifacts and models
   * [View Docs](https://docs.truefoundry.com/docs/integrations)
   * +sort=4
   */
  storage_integration_fqn: string;
  /**
   * +label=Collaborators
   * +sort=5
   * +usage=Users and Teams that have access to MLRepo
   * +uiType=Collaborators
   */
  collaborators: Collaborator[];
}
export interface LocalModelSource {
  /**
   * +label=Type
   * +usage=Type of the source
   * +value=local
   */
  type: "local";
  /**
   * +label=Path to the model file or folder
   * +usage=Path to the model file or folder
   */
  file_or_folder: string;
}
/**
 * +label=Transformers
 * +icon=transformers
 */
export interface TransformersFramework {
  /**
   * +label=Type
   * +usage=Type of the framework
   * +value=transformers
   */
  type: "transformers";
  /**
   * +label=Library Name
   * +usage=Name of the library for the framework
   */
  library_name?: "transformers" | "sentence-transformers" | "diffusers" | null;
  /**
   * +label=Pipeline Tag
   * +usage=The `pipeline()` task this model can be used with e.g. `text-generation`. See [huggingface docs](https://huggingface.co/docs/transformers/main/en/main_classes/pipelines#transformers.pipeline.task) for all possible values
   * +uiProps={"descriptionInline":true}
   */
  pipeline_tag?: string | null;
  /**
   * +label=Base Model
   * +usage=Base model Id from HuggingFace Hub. If this is a finetuned model, this points to the base model id used for finetuning.
   * +uiProps={"descriptionInline":true}
   */
  base_model?: string | null;
}
/**
 * +label=Tensorflow
 * +icon=tensorflow
 */
export interface TensorFlowFramework {
  /**
   * +label=Type
   * +usage=Type of the framework
   * +value=tensorflow
   */
  type: "tensorflow";
}
/**
 * +label=Sklearn
 * +icon=sklearn
 */
export interface SklearnFramework {
  /**
   * +label=Type
   * +usage=Type of the framework
   * +value=sklearn
   */
  type: "sklearn";
  /**
   * +label=Model file path
   * +usage=Relative path to the model file in the model version contents
   * +uiProps={"descriptionInline":true}
   */
  model_filepath?: string;
  serialization_format?: SklearnSerializationFormat;
  model_schema?: SklearnModelSchema;
}
/**
 * +label=Scikit Learn Model Schema
 */
export interface SklearnModelSchema {
  /**
   * +label=Inference Method Name
   * +usage=Name of the method used for inference
   */
  infer_method_name: "predict" | "predict_proba";
  /**
   * +label= Input Schema
   * +usage=Schema of the input
   * +uiProps={"descriptionInline":true}
   */
  inputs: {}[];
  /**
   * +label= Output Schema
   * +usage=Schema of the output
   * +uiProps={"descriptionInline":true}
   */
  outputs: {}[];
}
/**
 * +label=PyTorch
 * +icon=pytorch
 */
export interface PyTorchFramework {
  /**
   * +label=Type
   * +usage=Type of the framework
   * +value=pytorch
   */
  type: "pytorch";
}
/**
 * +label=Keras
 * +icon=keras
 */
export interface KerasFramework {
  /**
   * +label=Type
   * +usage=Type of the framework
   * +value=keras
   */
  type: "keras";
}
/**
 * +label=XGBoost
 * +icon=xgboost
 */
export interface XGBoostFramework {
  /**
   * +label=Type
   * +usage=Type of the framework
   * +value=xgboost
   */
  type: "xgboost";
  serialization_format?: XGBoostSerializationFormat;
  /**
   * +label=Model file path
   * +usage=Relative path to the model file in the model version contents
   */
  model_filepath?: string;
  model_schema?: XGBoostModelSchema;
}
/**
 * +label=XGBoost Model Schema
 * +usage=Schema of the XGBoost model
 */
export interface XGBoostModelSchema {
  /**
   * +label=Inference Method Name
   * +usage=Name of the method used for inference
   */
  infer_method_name: "predict";
  /**
   * +label= Input Schema
   * +usage=Schema of the input
   * +uiProps={"descriptionInline":true}
   */
  inputs: {}[];
  /**
   * +label= Output Schema
   * +usage=Schema of the output
   * +uiProps={"descriptionInline":true}
   */
  outputs: {}[];
}
/**
 * +label=LightGBM
 * +icon=lightbgm
 */
export interface LightGBMFramework {
  /**
   * +label=Type
   * +usage=Type of the framework
   * +value=lightgbm
   */
  type: "lightgbm";
}
/**
 * +label=ONNX
 * +icon=onnx
 */
export interface ONNXFramework {
  /**
   * +label=Type
   * +usage=Type of the framework
   * +value=onnx
   */
  type: "onnx";
}
/**
 * +label=SpaCy
 * +icon=spacy
 */
export interface SpaCyFramework {
  /**
   * +label=Type
   * +usage=Type of the framework
   * +value=spacy
   */
  type: "spacy";
}
/**
 * +label=StatsModels
 * +icon=statsmodel
 */
export interface StatsModelsFramework {
  /**
   * +label=Type
   * +usage=Type of the framework
   * +value=statsmodels
   */
  type: "statsmodels";
}
/**
 * +label=Paddle
 * +icon=paddle
 */
export interface PaddleFramework {
  /**
   * +label=Type
   * +usage=Type of the framework
   * +value=paddle
   */
  type: "paddle";
}
/**
 * +label=Environment
 * +usage=Runtime environment describing python version and dependencies for running the model
 * +uiProps={"descriptionInline":true}
 */
export interface ModelVersionEnvironment {
  /**
   * +label=Python Version
   * +usage=Python version to use when running the model
   */
  python_version?: string;
  /**
   * +label=PIP Packages
   * +usage=pip dependencies needed for running the model
   */
  pip_packages?: string[];
}
export interface Team {
  /**
   * +value=volume
   */
  type: "team";
  /**
   * +sort=1
   * +message=Use of only alpha numeric character and "-" is allowed as team name and must be less than 25 characters
   * +usage=Name of the Team
   */
  name: string;
  /**
   * +sort=2
   * +label=Team Members
   * +message=Enter email of each of the user you want to add in the team.
   * +uiType=UserSelect
   * +uiProps={"optionTypes": ["users"]}
   */
  members: string[];
}
export interface Policy {
  /**
   * +value=policy
   */
  type: "policy";
  /**
   * +label=Name
   * +usage=Name of the Policy
   * +sort=2
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Policy Action
   * +usage=Defines if the policy mutates or validates resources
   * +sort=3
   */
  operation: PolicyMutationOperation | PolicyValidationOperation;
  /**
   * +label=Mode
   * +usage=Mode of the policy: `Audit` logs all policy evaluations without blocking deployments, `Enforce` blocks deployments if the policy fails, and `Disabled` deactivates the policy.
   * +uiType=Radio
   * +sort=6
   */
  mode: "audit" | "enforce" | "disabled";
  /**
   * +label=Description
   * +usage=Description of the Policy
   * +sort=7
   * ++uiProps={"descriptionInline":true}
   * +message=Description must be between 1 byte and 1024 bytes
   */
  description: string;
  /**
   * +label=Entities
   * +usage=Types of Entities this policy applies to
   * +uiType=MultiSelect
   * +sort=8
   */
  entities: PolicyEntityTypes[];
  /**
   * +label=Actions
   * +usage=Actions this policy applies to
   * +uiType=Hidden
   * +sort=9
   */
  actions: PolicyActions[];
  filters?: PolicyFilters;
  /**
   * +label=Policy Code
   * +usage=TypeScript code for Policy logic. To write and test your policy code, please refer to this [repository](https://github.com/truefoundry/tfy-typescript-policy)
   * +sort=13
   * +uiType=CodeEditor
   * +uiProps={"language":"typescript"}
   * +message=Code size must be between 1 byte and 10 KB
   */
  code: string;
}
/**
 * +label=Mutate
 */
export interface PolicyMutationOperation {
  /**
   * +label=Action Type
   * +usage=Mutates or Validates Resources
   * +value=mutate
   */
  type: "mutate";
  /**
   * +label=Execution Order
   * +usage=Defines the execution sequence for mutation policies. Lower values execute first.
   * +sort=5
   * +message=Order must be a positive integer less than or equal to 100
   */
  order: number;
}
/**
 * +label=Validate
 */
export interface PolicyValidationOperation {
  /**
   * +label=Action Type
   * +usage=Mutates or Validates Resources
   * +value=validate
   */
  type: "validate";
}
/**
 * +label=Filters
 */
export interface PolicyFilters {
  /**
   * +label=Clusters
   * +usage=Cluster names where Policy applies
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  cluster_names?: string[];
  /**
   * +label=Workspaces
   * +usage=Workspace names where Policy applies
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  workspace_names?: string[];
  /**
   * +label=Environments
   * +usage=Environment names where Policy applies
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  env_names?: string[];
}
/**
 * +label=Jfrog Artifacts Registry
 * +icon=jfrog
 */
export interface JfrogArtifactsRegistry {
  /**
   * +value=integration/docker-registry/jfrog
   */
  type: "integration/docker-registry/jfrog";
  /**
   * +label=Display Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Registry URL
   * +usage=The URL of the registry.
   * +sort=200
   */
  registry_url: string;
  auth_data?: JfrogBasicAuth;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=MistralAI Model
 */
export interface MistralAIModel {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/mistral-ai
   */
  type: "integration/model/mistral-ai";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Nomic Model
 */
export interface NomicModel {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/nomic
   */
  type: "integration/model/nomic";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Ollama Model
 */
export interface OllamaModel {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/ollama
   */
  type: "integration/model/ollama";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=OpenAI Model
 * +icon=openai
 */
export interface OpenAIModel {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/openai
   */
  type: "integration/model/openai";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   * +uiType=Select
   */
  model_types: ModelType[];
  cost?: PerThousandTokensCostMetric | PerThousandEmbeddingTokensCostMetric;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Palm Model
 */
export interface PalmModel {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/palm
   */
  type: "integration/model/palm";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Perplexity Model
 */
export interface PerplexityAIModel {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/perplexity-ai
   */
  type: "integration/model/perplexity-ai";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Quay Artifacts Registry
 * +icon=quay
 */
export interface QuayArtifactsRegistry {
  /**
   * +value=integration/docker-registry/quay
   */
  type: "integration/docker-registry/quay";
  /**
   * +label=Display Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Registry URL
   * +usage=The URL of the registry.
   * +sort=200
   */
  registry_url: string;
  auth_data?: QuayBasicAuth;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Slack Webhook Integration
 * +icon=https://assets.production.truefoundry.com/slack.svg
 */
export interface SlackWebhookIntegration {
  /**
   * +value=integration/notification-channel/slack-webhook
   */
  type: "integration/notification-channel/slack-webhook";
  /**
   * +label=Display Name
   * +uiProps={"disableEdit":true}
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  auth_data: SlackWebhookAuth;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=10005
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=TTL
 * +icon=docker
 */
export interface TTLRegistry {
  /**
   * +value=integration/docker-registry/ttl
   */
  type: "integration/docker-registry/ttl";
  /**
   * +label=Display Name
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Registry URL
   * +usage=The URL of the registry.
   * +sort=200
   */
  registry_url: string;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=TogetherAI Model
 */
export interface TogetherAIModel {
  /**
   * +label=Display Name
   * +sort=1
   * +message=3 to 32 characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +sort=2
   */
  model_id: string;
  /**
   * +value=integration/model/together-ai
   */
  type: "integration/model/together-ai";
  /**
   * +usage=Specify the type of the model
   * +sort=4
   */
  model_types: ModelType[];
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=600
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
/**
 * +label=Webhook Integration
 * +icon=https://assets.production.truefoundry.com/webhook.svg
 */
export interface WebhookIntegration {
  /**
   * +value=integration/gateway-request-logger/webhook
   */
  type: "integration/gateway-request-logger/webhook";
  /**
   * +label=Display Name
   * +uiProps={"disableEdit":true}
   * +usage=The name of the integration that will be displayed in the TrueFoundry UI.
   * +sort=100
   * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
   */
  name: string;
  /**
   * +label=Webhook URL
   * +usage=The URL of the webhook endpoint
   * +sort=200
   */
  webhook_url: string;
  /**
   * +label=Authentication
   * +usage=Authentication configuration for the webhook
   * +sort=300
   */
  auth_data?: WebhookBasicAuth | WebhookBearerAuth;
  /**
   * +label=Access Control
   * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
   * +sort=10005
   * +uiType=AuthorizedSubjects
   */
  authorized_subjects?: string[];
}
